
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for Basket domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Can, Target, RobotPose, Robot, EEPose, Obstacle, Basket, BasketTarget

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: RedCan core.util_classes.items, BlueCan core.util_classes.items, Baxter core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items

Predicates Import Path: core.util_classes.baxter_predicates

Primitive Predicates: geom, Target, BlueCan; value, Target, Vector3d; rotation, Target, Vector3d; geom, Robot, Baxter; pose, Robot, Vector1d; lArmPose, Robot, ArmPose7d; lGripper, Robot, Vector1d; rArmPose, Robot, ArmPose7d; rGripper, Robot, Vector1d; value, RobotPose, Vector1d; lArmPose, RobotPose, ArmPose7d; lGripper, RobotPose, Vector1d; rArmPose, RobotPose, ArmPose7d; rGripper, RobotPose, Vector1d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; geom, Can, RedCan; pose, Can, Vector3d; rotation, Can, Vector3d; value, EEPose, Vector3d; rotation, EEPose, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d

Derived Predicates: BaxterEEReachableRot, Robot, RobotPose, EEPose; BaxterRCollides, Robot, Obstacle; BaxterIsMP, Robot; BaxterStationary, Basket; BaxterAt, Basket, BasketTarget; BaxterBasketInContact, Robot, EEPose, EEPose, BasketTarget; BaxterStationaryArms, Robot; BaxterEEReachablePos, Robot, RobotPose, EEPose; BaxterWithinJointLimit, Robot; BaxterObstructsHolding, Robot, RobotPose, RobotPose, Basket, Basket; BaxterCollides, Basket, Obstacle; BaxterObstructs, Robot, RobotPose, RobotPose, Basket; BaxterStationaryBase, Robot; BaxterStationaryW, Obstacle; BaxterRobotAt, Robot, RobotPose; BaxterEEReachableVerLeftPos, Robot, RobotPose, EEPose; BaxterEEReachableVerLeftRot, Robot, RobotPose, EEPose; BaxterEEReachableVerRightPos, Robot, RobotPose, EEPose; BaxterEEReachableVerRightRot, Robot, RobotPose, EEPose; BaxterBasketGraspLeftPos, EEPose, BasketTarget; BaxterBasketGraspLeftRot, EEPose, BasketTarget; BaxterBasketGraspRightPos, EEPose, BasketTarget; BaxterBasketGraspRightRot, EEPose, BasketTarget; BaxterBasketInGripperPos, Robot, Basket; BaxterBasketInGripperRot, Robot, Basket; BaxterBasketLevel, Basket


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold


Action basket_grasp 40: (?robot - Robot ?basket - Basket ?target - BasketTarget ?sp - RobotPose ?ee_left - EEPose ?ee_right - EEPose ?ep - RobotPose) (and (BaxterBasketLevel ?basket) (BaxterAt ?basket ?target) (BaxterRobotAt ?robot ?sp) (BaxterEEReachableVerLeftPos ?robot ?sp ?ee_left) (BaxterEEReachableVerLeftRot ?robot ?sp ?ee_left) (BaxterEEReachableVerRightPos ?robot ?sp ?ee_right) (BaxterEEReachableVerRightRot ?robot ?sp ?ee_right) (BaxterBasketInContact ?robot ?ee_left ?ee_right ?target) (BaxterBasketGraspLeftPos ?ee_left ?target) (BaxterBasketGraspLeftRot ?ee_left ?target) (BaxterBasketGraspRightPos ?ee_right ?target) (BaxterBasketGraspRightRot ?ee_right ?target) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?w - Obstacle)(BaxterStationaryW ?w)) (BaxterStationaryBase ?robot) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?w - Obstacle)(not (BaxterRCollides ?robot ?w))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Basket)(not (BaxterObstructsHolding ?robot ?sp ?ep ?obj ?basket))) (forall (?w - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?w))))) (and (not (BaxterAt ?basket ?target)) (not (BaxterRobotAt ?robot ?sp)) (BaxterRobotAt ?robot ?ep) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (BaxterObstructs ?robot ?sym1 ?sym2 ?basket)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Basket) (not (BaxterObstructsHolding ?robot ?sym1 ?sym2 ?basket ?obj)))))) 0:39 0:0 0:0 20:20 20:20 20:20 20:20 20:39 20:20 20:20 20:20 20:20 20:39 20:39 0:19 0:38 0:38 0:38 0:39 0:39 0:17 18:39 0:39 39:38 39:38 39:39 39:39 39:39 39:38 39:38

Action basket_putdown 40: (?robot - Robot ?basket - Basket ?target - BasketTarget ?sp - RobotPose ?ee_left - EEPose ?ee_right - EEPose ?ep - RobotPose) (and (BaxterBasketLevel ?basket) (BaxterRobotAt ?robot ?sp) (BaxterEEReachableVerLeftPos ?robot ?sp ?ee_left) (BaxterEEReachableVerLeftRot ?robot ?sp ?ee_left) (BaxterEEReachableVerRightPos ?robot ?sp ?ee_right) (BaxterEEReachableVerRightRot ?robot ?sp ?ee_right) (BaxterBasketInContact ?robot ?ee_left ?ee_right ?target) (BaxterBasketGraspLeftPos ?ee_left ?target) (BaxterBasketGraspLeftRot ?ee_left ?target) (BaxterBasketGraspRightPos ?ee_right ?target) (BaxterBasketGraspRightRot ?ee_right ?target) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?w - Obstacle)(BaxterStationaryW ?w)) (BaxterStationaryBase ?robot) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot)  (forall (?w - Obstacle)(not (BaxterRCollides ?robot ?w))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Basket)(not (BaxterObstructsHolding ?robot ?sp ?ep ?obj ?basket))) (forall (?w - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?w))))) (and (not (BaxterRobotAt ?robot ?sp)) (BaxterRobotAt ?robot ?ep) (BaxterAt ?basket ?target) (not (BaxterBasketInGripperPos ?robot ?basket)) (not (BaxterBasketInGripperRot ?robot ?basket)) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (BaxterObstructs ?robot ?sym1 ?sym2 ?basket)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Basket) (not (BaxterObstructsHolding ?robot ?sym1 ?sym2 ?basket ?obj)))))) 0:39 0:0 20:20 20:20 20:20 20:20 0:19 20:20 20:20 20:20 20:20 0:19 0:19 20:38 0:38 0:38 0:38 0:39 0:39 18:39 0:17 0:39 39:38 39:39 39:39 39:38 39:38 39:38 39:38
