import itertools
import random
from core.util_classes.namo_predicates import dsafe

GOAL = "(RobotAt pr2 robot_end_pose)"
HEIGHT = 5
WIDTH = 5
NUM_END = 20

INIT_PLACE = [[-2.5, 0.8], [3.2, -3.4]]
END_TARGETS = [[4.5, 2.], [3.5, 2.], [2.5, 2.], [1.5, 2], [-1.5, 2.], [2.5, 2.], [3.5, 2.], [4.5, 2.]]

def main():
    NUM_CANS = 2
    N_END = 8
    filename = "namo_probs/verify_{0}_object.prob".format(NUM_CANS)
    s = "# AUTOGENERATED. DO NOT EDIT.\n# Configuration file for NAMO problem instance. Blank lines and lines beginning with # are filtered out.\n\n"
    coords = list(itertools.product(list(range(-HEIGHT, HEIGHT)), list(range(-WIDTH, WIDTH))))
    random.shuffle(coords)
    coord_ind = 0
    s += "# The values after each attribute name are the values that get passed into the __init__ method for that attribute's class defined in the domain configuration.\n"
    s += "Objects: "
    for n in range(NUM_CANS):
        s += "Target (name can%d_init_target); "%(n)
        s += "Can (name can%d); "%(n)
        s += "Target (name can%d_end_target); "%(n)
    for i in range(N_END):
        s += "Target (name end_target_%d); "%(i)

    s += "Robot (name %s); "%"pr2"
    s += "Grasp (name {}); ".format("grasp0")
    s += "Grasp (name {}); ".format("grasp1")
    s += "Grasp (name {}); ".format("grasp2")
    s += "Grasp (name {}); ".format("grasp3")
    s += "RobotPose (name %s); "%"robot_init_pose"
    s += "RobotPose (name %s); "%"robot_end_pose"
    s += "Obstacle (name %s) \n\n"%"obs0"

    s += "Init: "
    for i in range(NUM_CANS):
        s += "(geom can%d_init_target 0.3), (value can%d_init_target %s), "%(i, i, INIT_PLACE[i])
        s += "(geom can%d 0.3), (pose can%d %s), "%(i, i, INIT_PLACE[i])
        s += "(geom can%d_end_target 0.3), (value can%d_end_target %s), "%(i, i, END_TARGETS[i])
    for i in range(N_END):
        s += "(geom end_target_%d 0.3), (value end_target_%d %s), "%(i, i, END_TARGETS[i])
    # s += "(value grasp0 undefined), "
    s += "(value grasp0 [0, {0}]), ".format(-0.65-dsafe)
    s += "(value grasp1 [0, {0}]), ".format(-0.65-dsafe)
    s += "(value grasp2 [0, {0}]), ".format(-0.65-dsafe)
    s += "(value grasp3 [0, {0}]), ".format(-0.65-dsafe)
    s += "(geom %s 0.3), (pose %s %s), "%("pr2", "pr2", [0, -5.5])
    s += "(gripper pr2 [-0.1]), "
    s += "(vel pr2 [0.]), "
    s += "(acc pr2 [0.]), "
    s += "(value %s %s), "%("robot_init_pose", [0., -5.5])
    s += "(value %s %s), "%("robot_end_pose", "undefined")
    s += "(geom %s %s), "%("robot_init_pose", 0.3)
    s += "(geom %s %s), "%("robot_end_pose", 0.3)
    s += "(gripper %s [-0.1]), "%("robot_init_pose")
    s += "(vel %s undefined), "%("robot_init_pose")
    s += "(acc %s undefined), "%("robot_init_pose")
    s += "(gripper %s undefined), "%("robot_init_pose")
    s += "(vel %s undefined), "%("robot_end_pose")
    s += "(acc %s undefined), "%("robot_end_pose")

    s += "(pose %s [-3.5, 0]), "%"obs0"
    s += "(geom %s %s); "%("obs0", "closet")

    for i in range(NUM_CANS):
        s += "(At can{} can{}_init_target), ".format(i, i)
        s += "(Near can{} can{}_init_target), ".format(i, i)
        s += "(Stationary can{}), ".format(i)
        for j in range(NUM_CANS):
            s += "(StationaryNEq can{} can{}), ".format(i, j)
    s += "(RobotAt pr2 robot_init_pose), "
    s += "(IsMP pr2), "
    s += "(StationaryW obs0) \n\n"

    s += "Goal: %s"%GOAL

    with open(filename, "w") as f:
        f.write(s)

if __name__ == "__main__":
    main()

