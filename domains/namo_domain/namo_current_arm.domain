
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Can, Target, RobotPose, Robot, Grasp, Obstacle, Rotation

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: RedCircle core.util_classes.items, BlueCircle core.util_classes.items, GreenCircle core.util_classes.items, Vector1d core.util_classes.matrix, Vector2d core.util_classes.matrix, Wall core.util_classes.items, TwoLinkArm core.util_classes.robots

Predicates Import Path: core.util_classes.namo_arm_predicates

Primitive Predicates: geom, Can, RedCircle; pose, Can, Vector2d; geom, Target, BlueCircle; value, Target, Vector2d; pose, Robot, Vector2d; value, RobotPose, Vector2d; gripper, RobotPose, Vector1d; geom, RobotPose, BlueCircle; geom, Robot, TwoLinkArm; joint1, Robot, Vector1d; joint2, Robot, Vector1d; wrist, Robot, Vector1d; joint1, RobotPose, Vector1d; joint2, RobotPose, Vector1d; wrist, RobotPose, Vector1d; gripper, Robot, Vector1d; value, Grasp, Vector2d; geom, Obstacle, Wall; pose, Obstacle, Vector2d; value, Rotation, Vector1d

Derived Predicates: At, Can, Target; AtInit, Can, Target; InGripper, Robot, Can, Grasp; Obstructs, Robot, Can, Can, Can; ObstructsHolding, Robot, Target, Target, Can, Can; WideObstructsHolding, Robot, Target, Target, Can, Can; StationaryWrist, Robot; StationaryRot, Robot; Stationary, Can; RobotStationary, Robot; StationaryNEq, Can, Can; IsMP, Robot; GripperClosed, Robot; Near, Can, Target; WideObstructs, Robot, Can, Can, Can; AtNEq, Can, Can, Target; TargetCanGraspCollides, Target, Can, Grasp; HLAtGrasp, Robot, Can, Grasp; InGraspAngle, Robot, Can; ApproachGraspAngle, Robot, Can;  NearGraspAngle, Robot, Can; ThetaDirValid, Robot; ForThetaDirValid, Robot; RevThetaDirValid, Robot; ScalarVelValid, Robot; HLGraspFailed, Can; HLTransferFailed, Can, Target; HLPlaceFailed, Target; RobotInBounds, Robot


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 25: (?robot - Robot ?can - Can ?target - Target ?end - Target) (and (At ?can ?target) (not (GripperClosed ?robot)) (forall (?obj - Can) (Stationary ?obj)) (IsMP ?robot) (RobotInBounds ?robot) (ApproachGraspAngle ?robot ?can) (forall (?obj - Can) (not (Obstructs ?robot ?can ?can ?obj))) (forall (?obj - Can) (not (WideObstructs ?robot ?can ?can ?obj))) (forall (?obj - Can) (not (WideObstructs ?robot ?can ?can ?obj))) (forall (?obj - Can) (not (Obstructs ?robot ?can ?can ?obj))) (forall (?obj - Can) (not (ObstructsHolding ?robot ?target ?target ?obj ?can))) )(and (InGraspAngle ?robot ?can) (NearGraspAngle ?robot ?can) (forall (?obj - Can / ?can) (not (NearGraspAngle ?robot ?obj))) (forall (?obj - Can / ?can) (not (InGraspAngle ?robot ?obj))) (forall (?obj - Can) (Stationary ?obj)) (RobotStationary ?robot) ) 0:0 1:23 0:23 0:23 0:24 22:22 0:-1 0:-1 1:20 21:21 21:23 24:24 24:24 24:23 24:23 24:23 23:23 

Action transfer 25: (?robot - Robot ?c - Can ?t - Target ?init - Target) (and (At ?c ?init) (forall (?obj - Can) (not (AtInit ?obj ?t))) (RobotInBounds ?robot) (RobotStationary ?robot) (InGraspAngle ?robot ?c) (NearGraspAngle ?robot ?c) (forall (?obj - Can) (not (Near ?obj ?t))) (GripperClosed ?robot) (not (GripperClosed ?robot)) (InGraspAngle ?robot ?c) (RobotStationary ?robot) (forall (?obj - Can) (not (ObstructsHolding ?robot ?t ?t ?obj ?c))) (forall (?obj - Can) (not (WideObstructsHolding ?robot ?t ?t ?obj ?c))) (forall (?obj - Can) (not (ObstructsHolding ?robot ?t ?t ?obj ?c))) (forall (?obj - Can) (not (ObstructsHolding ?robot ?t ?t ?obj ?c))) (forall (?obj - Can) (StationaryNEq ?obj ?c)) (IsMP ?robot) )(and (NearGraspAngle ?robot ?c) (forall (?obj - Can / ?c) (not (NearGraspAngle ?robot ?obj))) (At ?c ?t) (forall (?obj - Can / ?c) (not (NearGraspAngle ?robot ?obj))) (Near ?c ?t) (not (Near ?c ?init)) (not (At ?c ?init)) (forall (?obj - Can) (not (Obstructs ?robot ?obj ?obj ?c))) (forall (?obj - Can) (not (WideObstructs ?robot ?obj ?obj ?c))) (forall (?obj - Can) (forall (?targ - Target) (not (WideObstructsHolding ?robot ?targ ?targ ?c ?obj)))) (forall (?obj - Can) (forall (?targ - Target) (not (ObstructsHolding ?robot ?targ ?targ ?c ?obj)))) (forall (?obj - Can) (Stationary ?obj)) ) 0:0 0:-1 0:24 0:0 0:0 0:0 0:0 1:22 23:23 22:23 22:22 0:0 2:22 1:22 23:23 0:23 0:23 24:24 24:23 22:24 24:23 24:24 24:23 24:23 24:23 24:23 24:23 24:23 24:23 