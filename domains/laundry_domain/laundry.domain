
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Can, Target, RobotPose, Robot, EEPose, Obstacle, Basket

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Baxter core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Washer core.util_classes.items

Predicates Import Path: core.util_classes.baxter_predicates

Primitive Predicates: geom, BasketTarget, ; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; geom, Robot, Baxter; pose, Robot, Vector1d; lArmPose, Robot, ArmPose7d; lGripper, Robot, Vector1d; rArmPose, Robot, ArmPose7d; rGripper, Robot, Vector1d; value, RobotPose, Vector1d; lArmPose, RobotPose, ArmPose7d; lGripper, RobotPose, Vector1d; rArmPose, RobotPose, ArmPose7d; rGripper, RobotPose, Vector1d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; value, EEPose, Vector3d; rotation, EEPose, Vector3d; geom, Basket, ; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Washer, Basket; pose, Washer, Vector3d; rotation, Washer, Vector3d

Derived Predicates: BaxterStationary, Basket; BaxterEEReachableVerLeftPos, Robot, RobotPose, EEPose; BaxterCollides, Basket, Obstacle; BaxterEEReachableVerRightRot, Robot, RobotPose, EEPose; BaxterEEReachableVerRightPos, Robot, RobotPose, EEPose; BaxterBasketLevel, Basket; BaxterBasketInGripperPos, Robot, Basket; BaxterEEReachableRot, Robot, RobotPose, EEPose; BaxterRCollides, Robot, Obstacle; BaxterBasketInContact, Robot, EEPose, EEPose, BasketTarget; BaxterIsMP, Robot; BaxterBasketGraspLeftPos, EEPose, BasketTarget; BaxterEEReachableVerLeftRot, Robot, RobotPose, EEPose; BaxterBasketGraspRightPos, EEPose, BasketTarget; BaxterStationaryArms, Robot; BaxterBasketInGripperRot, Robot, Basket; BaxterBasketOpenGripper, Robot, EEPose, EEPose, BasketTarget; BaxterRobotAt, Robot, RobotPose; BaxterWithinJointLimit, Robot; BaxterStationaryBase, Robot; BaxterBasketGraspLeftRot, EEPose, BasketTarget; BaxterAt, Basket, BasketTarget; BaxterEEReachablePos, Robot, RobotPose, EEPose; BaxterObstructsHolding, Robot, RobotPose, RobotPose, Basket, Basket; BaxterBasketGraspRightRot, EEPose, BasketTarget; BaxterObstructs, Robot, RobotPose, RobotPose, Basket; BaxterStationaryW, Obstacle


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 30: (?robot - Robot ?start - RobotPose ?end - RobotPose) (and (forall (?obj - Basket)(not (BaxterBasketInGripperPos ?robot ?obj))) (BaxterRobotAt ?robot ?start) (forall (?obj - Basket )(not (BaxterObstructs ?robot ?start ?end ?obj))) (forall (?obj - Basket)(BaxterStationary ?obj)) (forall (?obs - Obstacle) (BaxterStationaryW ?obs)) (BaxterBasketOpenGripper ?robot ?ee_left ?ee_right ?target) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?w - Obstacle) (not (BaxterRCollides ?robot ?w))) )(and  (not (BaxterRobotAt ?robot ?start)) (BaxterRobotAt ?robot ?end) ) 0:0 0:0 0:28 0:28 0:28 0:29 0:28 0:29 0:29 0:29 29:28 29:29 

Action movetoholding 30: (?robot - Robot ?start - RobotPose ?end - RobotPose ?basket - Basket) (and (BaxterRobotAt ?robot ?start) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?obj - Basket)(not (BaxterObstructsHolding ?robot ?start ?end ?obj ?basket))) (forall (?obs - Obstacle) (BaxterStationaryW ?obs)) (BaxterBasketInContact ?robot ?ee_left ?ee_right ?target) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?obs - Obstacle) (not (BaxterRCollides ?robot ?obs))) )(and  (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (not (BaxterRobotAt ?robot ?start)) (BaxterRobotAt ?robot ?end) ) 0:0 0:29 0:29 0:29 0:28 0:29 0:28 0:29 0:29 0:29 0:29 0:29 29:28 29:29 

Action basket_grasp 11: (?robot - Robot ?basket - Basket ?target - BasketTarget ?sp - RobotPose ?ee_left - EEPose ?ee_right - EEPose ?ep - RobotPose) (and (BaxterAt ?basket ?target) (BaxterRobotAt ?robot ?sp) (BaxterEEReachableVerLeftPos ?robot ?sp ?ee_left) (BaxterEEReachableVerLeftRot ?robot ?sp ?ee_left) (BaxterEEReachableVerRightPos ?robot ?sp ?ee_right) (BaxterEEReachableVerRightRot ?robot ?sp ?ee_right) (BaxterBasketOpenGripper ?robot ?ee_left ?ee_right ?target) (BaxterBasketInContact ?robot ?ee_left ?ee_right ?target) (BaxterBasketGraspLeftPos ?ee_left ?target) (BaxterBasketGraspLeftRot ?ee_left ?target) (BaxterBasketGraspRightPos ?ee_right ?target) (BaxterBasketGraspRightRot ?ee_right ?target) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?obj - Basket)(not (BaxterBasketInGripperPos ?robot ?basket))) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?obs - Obstacle)(BaxterStationaryW ?obs)) (BaxterStationaryBase ?robot) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?obs - Obstacle)(not (BaxterRCollides ?robot ?obs))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Basket)(not (BaxterObstructsHolding ?robot ?sp ?ep ?obj ?basket))) )(and  (not (BaxterAt ?basket ?target)) (not (BaxterRobotAt ?robot ?sp)) (BaxterRobotAt ?robot ?ep) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (BaxterObstructs ?robot ?sym1 ?sym2 ?basket)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Basket) (not (BaxterObstructsHolding ?robot ?sym1 ?sym2 ?basket ?obj))))) ) 0:0 0:0 5:5 5:5 5:5 5:5 0:4 5:10 5:5 5:5 5:5 5:5 5:10 5:10 0:4 0:4 0:9 0:9 0:9 0:10 0:9 0:10 0:4 5:10 10:9 10:9 10:10 10:10 10:10 10:9 10:9 

Action basket_putdown 11: (?robot - Robot ?basket - Basket ?target - BasketTarget ?sp - RobotPose ?ee_left - EEPose ?ee_right - EEPose ?ep - RobotPose) (and (BaxterRobotAt ?robot ?sp) (BaxterEEReachableVerLeftPos ?robot ?sp ?ee_left) (BaxterEEReachableVerLeftRot ?robot ?sp ?ee_left) (BaxterEEReachableVerRightPos ?robot ?sp ?ee_right) (BaxterEEReachableVerRightRot ?robot ?sp ?ee_right) (BaxterBasketOpenGripper ?robot ?ee_left ?ee_right ?target) (BaxterBasketInContact ?robot ?ee_left ?ee_right ?target) (BaxterBasketGraspLeftPos ?ee_left ?target) (BaxterBasketGraspLeftRot ?ee_left ?target) (BaxterBasketGraspRightPos ?ee_right ?target) (BaxterBasketGraspRightRot ?ee_right ?target) (BaxterBasketInGripperPos ?robot ?basket) (BaxterBasketInGripperRot ?robot ?basket) (forall (?obj - Basket)(not (BaxterBasketInGripperPos ?robot ?basket))) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?obs - Obstacle)(BaxterStationaryW ?obs)) (BaxterStationaryBase ?robot) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?obs - Obstacle)(not (BaxterRCollides ?robot ?obs))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Basket)(not (BaxterObstructsHolding ?robot ?sp ?ep ?obj ?basket))) )(and  (BaxterAt ?basket ?target) (not (BaxterRobotAt ?robot ?sp)) (BaxterRobotAt ?robot ?ep) (not (BaxterBasketInGripperPos ?robot ?basket)) (not (BaxterBasketInGripperRot ?robot ?basket)) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (BaxterObstructs ?robot ?sym1 ?sym2 ?basket)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Basket) (not (BaxterObstructsHolding ?robot ?sym1 ?sym2 ?basket ?obj))))) ) 0:0 5:5 5:5 5:5 5:5 0:5 6:10 5:5 5:5 5:5 5:5 0:5 0:5 6:10 6:10 0:9 0:9 0:9 0:10 0:9 0:10 6:10 0:5 10:10 10:9 10:10 10:9 10:9 10:9 10:9 