
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Basket, BasketTarget, RobotPose, Robot, EEPose, Obstacle, Washer, WasherPose, Cloth, ClothTarget

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Baxter core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Washer core.util_classes.robots, Cloth core.util_classes.items

Predicates Import Path: core.util_classes.baxter_predicates

Primitive Predicates: geom, WasherPose, Washer; value, WasherPose, Vector3d; rotation, WasherPose, Vector3d; door, WasherPose, Vector1d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; geom, Robot, Baxter; pose, Robot, Vector1d; lArmPose, Robot, ArmPose7d; lGripper, Robot, Vector1d; rArmPose, Robot, ArmPose7d; rGripper, Robot, Vector1d; value, RobotPose, Vector1d; lArmPose, RobotPose, ArmPose7d; lGripper, RobotPose, Vector1d; rArmPose, RobotPose, ArmPose7d; rGripper, RobotPose, Vector1d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; value, EEPose, Vector3d; rotation, EEPose, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Washer, Washer; pose, Washer, Vector3d; rotation, Washer, Vector3d; door, Washer, Vector1d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d

Derived Predicates: BaxterObstructsWasher, Robot, RobotPose, RobotPose, Washer; BaxterStationary, Basket; BaxterOpenGripperLeft, Robot; BaxterPushWasher, Robot, Washer; BaxterClothInGripperRight, Robot, Cloth; BaxterClothTargetInWasher, ClothTarget, WasherPose; BaxterCollides, Basket, Obstacle; BaxterOpenGrippers, Robot; BaxterEEGraspValid, EEPose, Washer; BaxterClothAt, Cloth, ClothTarget; BaxterClothInGripperLeft, Robot, Cloth; BaxterBasketLevel, Basket; BaxterObjectWithinRotLimit, EEPose; BaxterEEGraspValidSide, EEPose, Washer; BaxterEERetreatLeft, Robot, RobotPose, EEPose; BaxterCloseGrippers, Robot; BaxterRCollides, Robot, Obstacle; BaxterCloseGripperRight, Robot; BaxterOpenGripperRight, Robot; BaxterClothGraspValid, EEPose, ClothTarget; BaxterWasherAt, Washer, WasherPose; BaxterEEReachableRightVer, Robot, RobotPose, EEPose; BaxterIsMP, Robot; BaxterBasketGraspLeftPos, EEPose, BasketTarget; BaxterObstructsHoldingCloth, Robot, RobotPose, RobotPose, Basket, Cloth; BaxterBasketGraspRightPos, EEPose, BasketTarget; BaxterStationaryArms, Robot; BaxterCloseGripperLeft, Robot; BaxterEEApproachRight, Robot, RobotPose, EEPose; BaxterWasherInGripper, Robot, Washer; BaxterWithinJointLimit, Robot; BaxterEEReachableLeftVer, Robot, RobotPose, EEPose; BaxterCollidesWasher, Robot, Washer; BaxterClothInBasket, ClothTarget, BasketTarget; BaxterWasherWithinJointLimit, Washer; BaxterStationaryBase, Robot; BaxterStationaryCloth, Cloth; BaxterBasketGraspLeftRot, EEPose, BasketTarget; BaxterEERetreatRight, Robot, RobotPose, EEPose; BaxterPosePair, RobotPose, RobotPose; BaxterAt, Basket, BasketTarget; BaxterStationaryWasher, Washer; BaxterObstructsCloth, Robot, RobotPose, RobotPose, Cloth; BaxterRobotAt, Robot, RobotPose; BaxterStationaryWasherDoor, Washer; BaxterEEApproachLeft, Robot, RobotPose, EEPose; BaxterObstructsHolding, Robot, RobotPose, RobotPose, Basket, Basket; BaxterBasketGraspRightRot, EEPose, BasketTarget; BaxterObstructs, Robot, RobotPose, RobotPose, Basket; BaxterObjRelPoseConstant, Basket, Cloth; BaxterBasketInGripper, Robot, Basket; BaxterStationaryW, Obstacle


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 30: (?robot - Robot ?start - RobotPose ?end - RobotPose) (and (BaxterRobotAt ?robot ?start) (BaxterStationaryBase ?robot) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?obs - Cloth) (BaxterStationaryCloth ?obs)) (forall (?obj - Washer) (BaxterStationaryWasher ?obj)) (forall (?obj - Washer)(BaxterStationaryWasherDoor ?obj)) (forall (?obs - Obstacle) (BaxterStationaryW ?obs)) (forall (?basket - Basket) (BaxterBasketLevel ?basket)) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obj - Basket)(not (BaxterBasketInGripper ?robot ?obj))) (forall (?obj - Cloth)(not (BaxterClothInGripperLeft ?robot ?obj))) (forall (?obj - Washer)(not (BaxterWasherInGripper ?robot ?obj))) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?w - Obstacle) (not (BaxterRCollides ?robot ?w))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?start ?end ?obj))) (forall (?obj - Washer)(not (BaxterObstructsWasher ?robot ?start ?end ?obj))) )(and  (not (BaxterRobotAt ?robot ?start)) (BaxterRobotAt ?robot ?end) ) 0:0 0:28 0:28 0:28 0:28 0:28 0:28 0:29 0:28 0:29 0:0 0:0 0:0 0:29 0:29 0:28 0:28 29:28 29:29 

Action cloth_grasp 21: (?robot - Robot ?cloth - Cloth ?target - ClothTarget ?sp - RobotPose ?ee_left - EEPose ?ep - RobotPose) (and (BaxterClothAt ?cloth ?target) (BaxterRobotAt ?robot ?sp) (BaxterPosePair ?sp ?ep) (BaxterEEReachableLeftVer ?robot ?sp ?ee_left) (BaxterClothGraspValid ?ee_left ?target) (BaxterOpenGripperLeft ?robot) (BaxterStationaryCloth ?cloth) (forall (?obj - Basket) (BaxterStationary ?obj)) (forall (?obs - Washer)(BaxterStationaryWasher ?obs)) (forall (?obs - Washer) (BaxterStationaryWasherDoor ?obs)) (forall (?obs - Obstacle)(BaxterStationaryW ?obs)) (BaxterStationaryBase ?robot) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?obs - Obstacle)(not (BaxterRCollides ?robot ?obs))) (forall (?obj - Basket)(not (BaxterObstructs ?robot ?sp ?ep ?obj))) )(and (not (BaxterOpenGripperLeft ?robot)) (BaxterClothInGripperLeft ?robot ?cloth) (BaxterCloseGripperLeft ?robot) (not (BaxterClothAt ?cloth ?target)) (not (BaxterRobotAt ?robot ?sp)) (not (BaxterStationaryCloth ?cloth)) (BaxterRobotAt ?robot ?ep) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Basket) (not (BaxterObstructsHoldingCloth ?robot ?sym1 ?sym2 ?obj ?cloth))))) ) 0:0 0:0 0:0 10:10 10:10 0:9 0:9 0:19 0:19 0:19 0:19 0:19 0:19 0:20 0:19 0:20 0:20 20:19 10:20 10:20 20:19 20:19 10:20 20:20 20:19 

Action moveholding_cloth 20: (?robot - Robot ?start - RobotPose ?end - RobotPose ?cloth - Cloth) (and (BaxterRobotAt ?robot ?start) (BaxterCloseGripperLeft ?robot) (forall (?obj - Basket)(not (BaxterObstructsHoldingCloth ?robot ?start ?end ?obj ?cloth))) (forall (?obj - Washer)(not (BaxterObstructsWasher ?robot ?start ?end ?obj))) (forall (?obj - Basket)(BaxterStationary ?obj)) (BaxterStationaryBase ?robot) (forall (?obs - Washer) (BaxterStationaryWasher ?obs)) (forall (?obs - Washer) (BaxterStationaryWasherDoor ?obs)) (forall (?obs - Obstacle) (BaxterStationaryW ?obs)) (BaxterIsMP ?robot) (BaxterWithinJointLimit ?robot) (forall (?obs - Obstacle)(forall (?obj - Basket)(not (BaxterCollides ?obj ?obs)))) (forall (?obs - Obstacle) (not (BaxterRCollides ?robot ?obs))) )(and (BaxterClothInGripperLeft ?robot ?cloth) (not (BaxterRobotAt ?robot ?start)) (BaxterRobotAt ?robot ?end) ) 0:0 0:19 0:19 0:18 0:18 0:18 0:18 0:18 0:18 0:18 0:19 0:19 0:19 19:19 19:18 19:19 