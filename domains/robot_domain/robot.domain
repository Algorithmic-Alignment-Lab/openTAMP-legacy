
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Robot, RobotPose, Item, Target 

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Baxter core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Cloth core.util_classes.items

Predicates Import Path: core.util_classes.robot_predicates


Subtypes: Cloth, Can, Basket, Obstacle - Item; ClothTarget, CanTarget, BasketTarget - Target; Baxter - Robot; BaxterPose - RobotPose

Primitive Predicates: geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; left, BaxterPose, ArmPose7d; left_gripper, BaxterPose, Vector1d; right, BaxterPose, ArmPose7d; right_gripper, BaxterPose, Vector1d; value, Target, Vector3d; rotation, Target, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; pose, Robot, Vector3d; pose, Item, Vector3d; rotation, Item, Vector3d; value, RobotPose, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; geom, Baxter, Baxter; left, Baxter, ArmPose7d; left_gripper, Baxter, Vector1d; right, Baxter, ArmPose7d; right_gripper, Baxter, Vector1d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d

Derived Predicates: StationaryW, Obstacle; CloseGripperLeft, Robot; Obstructs, Robot, RobotPose, RobotPose, Item; GripperAt, Robot, Item; OpenGripper, Robot; OpenGripperRight, Robot; EEReachableLeftVer, Robot, RobotPose, Item; RobotAt, Robot, RobotPose; CloseGripper, Robot; CloseGripperRight, Robot; IsMP, Robot; RSelfCollides, Robot; Stationary, Item; OpenGripperLeft, Robot; RCollides, Robot, Item; WithinJointLimit, Robot; At, Item, Target; LeftGripperDownRot, Robot; InGripperRight, Robot, Item; InGripperLeft, Robot, Item; EEReachableRightVer, Robot, RobotPose, Item; GripperAtRight, Robot, Item; ObstructsHolding, Robot, RobotPose, RobotPose, Item, Item; StationaryArms, Robot; Collides, Item, Item; GripperAtLeft, Robot, Item; InGripper, Robot, Item; GrippersDownRot, Robot; RightGripperDownRot, Robot; StationaryRightArm, Robot; StationaryLeftArm, Robot; StationaryBase, Robot


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 25: (?robot - Robot ?start - RobotPose ?end - RobotPose) (and (RobotAt ?robot ?start) (forall (?obj - Item)(not (Obstructs ?robot ?start ?end ?obj))) (StationaryBase ?robot) (forall (?obj - Item)(Stationary ?obj)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Item)(forall (?obj - Item / ?obs)(not (Collides ?obj ?obs)))) (forall (?w - Obstacle) (not (RCollides ?robot ?w))) (forall (?obj - Item)(not (InGripperLeft ?robot ?obj))) (OpenGripperLeft ?robot) (StationaryRightArm ?robot) (LeftGripperDownRot ?robot) (LeftGripperDownRot ?robot) )(and  (not (RobotAt ?robot ?start)) (RobotAt ?robot ?end) ) 0:0 0:23 0:23 0:23 0:23 0:23 0:24 0:24 0:24 0:0 1:24 0:24 0:0 0:24 24:23 24:24 

Action moveholding 25: (?robot - Robot ?start - RobotPose ?end - RobotPose ?item - Item) (and (RobotAt ?robot ?start) (CloseGrippers ?robot) (forall (?obj - Item)(not (ObstructsHolding ?robot ?start ?end ?obj ?item))) (forall (?obj - Item / ?item)(Stationary ?obj)) (StationaryBase ?robot) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle) (not (RCollides ?robot ?obs))) (forall (?obj - Item / ?item)(not (InGripperLeft ?robot ?obj))) (CloseGripperLeft ?robot) (InGripperLeft ?robot ?item) (StationaryRightArm ?robot) (LeftGripperDownRot ?robot) (LeftGripperDownRot ?robot) )(and (not (RobotAt ?robot ?start)) (RobotAt ?robot ?end) ) 0:0 0:24 0:24 0:23 0:23 0:23 0:23 0:24 0:24 0:0 0:24 0:24 0:24 0:0 0:24 24:23 24:24 

Action grasp 21: (?robot - Robot ?item - Item ?target - Target ?sp - RobotPose ?ep - RobotPose) (and (At ?item ?target) (RobotAt ?robot ?sp) (forall (?obj - Item) (Stationary ?obj)) (forall (?obs - Obstacle)(StationaryW ?obs)) (StationaryBase ?robot) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Item)(forall (?obj - Item / ?obs)(not (Collides ?obj ?obs)))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?sp ?ep ?obj ?item))) (not (InGripperRight ?robot ?item)) (not (InGripperLeft ?robot ?item)) (EEReachableLeftVer ?robot ?sp ?item) (OpenGripperLeft ?robot) (CloseGripperLeft ?robot) (InGripperLeft ?robot ?item) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (StationaryRightArm ?robot) (LeftGripperDownRot ?robot) (LeftGripperDownRot ?robot) )(and (not (At ?item ?target)) (not (RobotAt ?robot ?sp)) (RobotAt ?robot ?ep) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (Obstructs ?robot ?sym1 ?sym2 ?item)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Item) (not (ObstructsHolding ?robot ?sym1 ?sym2 ?item ?obj))))) (InGripperLeft ?robot ?item) ) 0:10 0:0 0:9 0:19 0:19 0:19 0:20 0:19 0:20 0:9 10:20 0:0 0:0 10:10 1:9 10:20 10:20 0:9 0:0 0:20 0:0 0:20 20:19 20:19 20:20 20:19 20:19 20:20 

Action putdown 21: (?robot - Robot ?item - Item ?target - Target ?sp - RobotPose ?ep - RobotPose) (and (At ?item ?target) (RobotAt ?robot ?sp) (forall (?obj - Item) (Stationary ?obj)) (forall (?obs - Obstacle)(StationaryW ?obs)) (StationaryBase ?robot) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Item)(forall (?obj - Item / ?obs)(not (Collides ?obj ?obs)))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?sp ?ep ?obj ?item))) (not (InGripperRight ?robot ?item)) (InGripperLeft ?robot ?item) (EEReachableLeftVer ?robot ?sp ?item) (CloseGripperLeft ?robot) (OpenGripperLeft ?robot) (InGripperLeft ?robot ?item) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (StationaryRightArm ?robot) (LeftGripperDownRot ?robot) (LeftGripperDownRot ?robot) )(and (At ?item ?target) (not (RobotAt ?robot ?sp)) (RobotAt ?robot ?ep) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (Obstructs ?robot ?sym1 ?sym2 ?item)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Item) (not (ObstructsHolding ?robot ?sym1 ?sym2 ?item ?obj))))) (not (InGripperLeft ?robot ?item)) ) 0:10 0:0 0:9 0:19 0:19 0:19 0:20 0:19 0:20 0:9 10:20 0:0 0:0 10:10 1:9 10:20 0:10 11:20 0:20 0:0 0:20 20:19 20:19 20:20 20:19 20:19 20:20 