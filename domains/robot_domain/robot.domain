
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Robot, RobotPose, CollisionShape 

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Baxter core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Cloth core.util_classes.items

Predicates Import Path: core.util_classes.robot_predicates


Subtypes: Obstacle, Reachable - CollisionShape; Item, Target - Reachable; Cloth, Can, Basket - Item; ClothTarget, CanTarget, BasketTarget - Target; Baxter - Robot; BaxterPose - RobotPose

Primitive Predicates: value, RobotPose, Vector3d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; value, Target, Vector3d; rotation, Target, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Baxter, Baxter; left, Baxter, ArmPose7d; left_gripper, Baxter, Vector1d; left_ee_pos, Baxter, Vector3d; right, Baxter, ArmPose7d; right_gripper, Baxter, Vector1d; right_ee_pos, Baxter, Vector3d; left, BaxterPose, ArmPose7d; left_gripper, BaxterPose, Vector1d; left_ee_pos, BaxterPose, Vector3d; right, BaxterPose, ArmPose7d; right_gripper, BaxterPose, Vector1d; right_ee_pos, BaxterPose, Vector3d; pose, Item, Vector3d; rotation, Item, Vector3d; pose, Robot, Vector3d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d; pose, CollisionShape, Vector3d; rotation, CollisionShape, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; value, Reachable, Vector3d; rotation, Reachable, Vector3d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d

Derived Predicates: OpenGripper, Robot; OpenGripperLeft, Robot; GripperAtLeft, Robot, Item; NearApproachLeft, Robot, Reachable; ApproachLeft, Robot, Reachable; GripperAtRight, Robot, Item; CloseGripperRight, Robot; InGripper, Robot, Item; ObstructsHolding, Robot, RobotPose, RobotPose, CollisionShape, CollisionShape; StationaryRightArm, Robot; StationaryBase, Robot; RSelfCollides, Robot; Stationary, Item; OpenGripperRight, Robot; At, Item, Target; InGripperRight, Robot, Item; InGripperLeft, Robot, Item; NearApproachRight, Robot, Reachable; GripperAt, Robot, Item; RCollides, Robot, CollisionShape; Collides, CollisionShape, CollisionShape; RightGripperDownRot, Robot; EEReachableLeft, Robot, Reachable; IsMP, Robot; Near, Item, Target; StationaryW, Obstacle; NearGripperRight, Robot, Item; StationaryNEq, Item, Item; WithinJointLimit, Robot; ApproachRight, Robot, Reachable; EEReachableRight, Robot, Reachable; StationaryLeftArm, Robot; Obstructs, Robot, RobotPose, RobotPose, CollisionShape; LeftEEValid, Robot; LeftGripperDownRot, Robot; RightEEValid, Robot; GrippersDownRot, Robot; RobotAt, Robot, RobotPose; CloseGripperLeft, Robot; CloseGripper, Robot; StationaryArms, Robot; EEValid, Robot; NearGripperLeft, Robot, Item


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action move_to_grasp_left 11: (?robot - Robot ?item - Item ?targ - Target ?start - RobotPose ?end - RobotPose) (and (RobotAt ?robot ?start) (not (RobotAt ?robot ?end)) (forall (?obj - Item)(not (Obstructs ?robot ?start ?end ?obj))) (forall (?obj - Item)(Stationary ?obj)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?w - Obstacle) (not (RCollides ?robot ?w))) (forall (?obj - Item)(not (InGripperLeft ?robot ?obj))) (OpenGripperLeft ?robot) (StationaryRightArm ?robot) (At ?item ?targ) (At ?item ?targ) )(and  (not (RobotAt ?robot ?start)) (RobotAt ?robot ?end) (ApproachLeft ?robot ?item) (NearApproachLeft ?robot ?item) (forall (?obj - Reachable / ?item) (not (ApproachLeft ?robot ?obj))) (forall (?obj - Reachable / ?item) (not (NearApproachLeft ?robot ?obj))) ) 0:-1 0:-1 1:9 0:9 0:9 0:9 0:10 0:10 0:0 1:9 0:9 0:0 9:10 10:9 10:9 10:10 10:10 10:9 10:9 

Action move_to_putdown_left 11: (?robot - Robot ?targ - Target ?item - Item ?start - RobotPose ?end - RobotPose) (and (RobotAt ?robot ?start) (not (RobotAt ?robot ?end)) (forall (?obj - Item)(not (ObstructsHolding ?robot ?start ?end ?obj ?item))) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle) (not (RCollides ?robot ?obs))) (CloseGripperLeft ?robot) (InGripperLeft ?robot ?item) (NearGripperLeft ?robot ?item) (InGripperLeft ?robot ?item) (NearGripperLeft ?robot ?item) (StationaryRightArm ?robot) (forall (?obj - Item) (not (At ?obj ?targ))) )(and (not (RobotAt ?robot ?start)) (RobotAt ?robot ?end) (ApproachLeft ?robot ?targ) (NearApproachLeft ?robot ?targ) ) 0:-1 0:-1 1:10 0:9 0:9 0:9 0:10 0:10 1:9 0:-1 0:0 9:10 10:10 0:9 0:0 10:9 10:9 9:9 9:10 

Action grasp_left 9: (?robot - Robot ?item - Item ?target - Target ?sp - RobotPose ?ep - RobotPose) (and (At ?item ?target) (At ?item ?target) (RobotAt ?robot ?sp) (not (RobotAt ?robot ?ep)) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item) (StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (Collides ?item ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?sp ?ep ?obj ?item))) (ApproachLeft ?robot ?item) (not (InGripperRight ?robot ?item)) (not (InGripperLeft ?robot ?item)) (OpenGripperLeft ?robot) (CloseGripperLeft ?robot) (InGripperLeft ?robot ?item) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (StationaryRightArm ?robot) )(and (not (At ?item ?target)) (not (RobotAt ?robot ?sp)) (RobotAt ?robot ?ep) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (Obstructs ?robot ?sym1 ?sym2 ?item)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Item) (not (ObstructsHolding ?robot ?sym1 ?sym2 ?item ?obj))))) (InGripperLeft ?robot ?item) (NearGripperLeft ?robot ?item) (forall (?obj - Reachable / ?item) (not (ApproachLeft ?robot ?obj))) (forall (?obj - Reachable / ?item) (not (NearApproachLeft ?robot ?obj))) ) 0:0 1:4 0:-1 0:0 0:3 0:7 0:7 0:7 0:8 1:7 1:7 1:1 3:7 0:0 0:0 0:0 1:3 4:7 3:4 0:0 0:0 0:7 8:7 8:7 8:7 8:7 8:7 7:8 8:8 8:7 8:7 

Action putdown_left 8: (?robot - Robot ?target - Target ?item - Item ?sp - RobotPose ?ep - RobotPose) (and (At ?item ?target) (forall (?obj - Item) (not (At ?obj ?target))) (forall (?obj - Item) (not (Near ?obj ?target))) (RobotAt ?robot ?sp) (not (RobotAt ?robot ?ep)) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (Collides ?item ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?sp ?ep ?obj ?item))) (ApproachLeft ?robot ?target) (not (InGripperRight ?robot ?item)) (InGripperLeft ?robot ?item) (NearGripperLeft ?robot ?item) (CloseGripperLeft ?robot) (OpenGripperLeft ?robot) (InGripperLeft ?robot ?item) (forall (?obj - Item)(not (InGripperLeft ?robot ?item))) (StationaryRightArm ?robot) )(and (At ?item ?target) (Near ?item ?target) (not (RobotAt ?robot ?sp)) (RobotAt ?robot ?ep) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (Obstructs ?robot ?sym1 ?sym2 ?item)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Item) (not (ObstructsHolding ?robot ?sym1 ?sym2 ?item ?obj))))) (not (InGripperLeft ?robot ?item)) (not (NearGripperLeft ?robot ?item)) ) 2:7 0:0 0:0 0:-1 0:-1 3:6 0:6 0:6 0:6 0:7 0:6 1:6 6:7 1:5 0:0 0:0 0:-1 0:0 1:2 3:6 2:3 4:7 0:6 6:7 6:7 7:6 7:6 7:6 7:6 7:7 7:7 