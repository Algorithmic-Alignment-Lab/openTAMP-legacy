{'agent': {'T': 1,
           'action_inds': {('pr2', 'gripper'): array([2]),
                           ('pr2', 'pose'): array([0, 1])},
           'conditions': 2,
           'dU': 3,
           'dX': 5,
           'env': RaveGetEnvironment(1),
           'get_hl_plan': <function hl_plan_for_state at 0x7f7ed15e7f50>,
           'get_plan': <function get_plan at 0x7f7ed15700c8>,
           'hist_len': 5,
           'image_channels': 3,
           'image_height': 140,
           'image_width': 140,
           'model': None,
           'num_cans': 1,
           'obs_include': [1,
                           9,
                           6],
           'openrave_bodies': {'can0': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f7ed1555250>,
                               'pr2': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f7ed1555210>},
           'plans': {('grasp', 'can0'): <core.internal_repr.plan.Plan object at 0x7f7ed1529e10>,
                     ('putdown', 'can0'): <core.internal_repr.plan.Plan object at 0x7f7ed1555f90>},
           'sensor_dims': {0: 3,
                           1: 5,
                           6: 15,
                           8: 2,
                           9: 4},
           'solver': <__main__.NAMOPolicySolver object at 0x7f7ed159cb90>,
           'state_include': [1],
           'state_inds': {('can0', 'pose'): array([3, 4]),
                          ('can0_end_target', 'value'): array([12, 13]),
                          ('can0_init_target', 'value'): array([10, 11]),
                          ('grasp0', 'value'): array([5, 6]),
                          ('middle_target', 'value'): array([14, 15]),
                          ('pdp_target0', 'gripper'): array([21]),
                          ('pdp_target0', 'value'): array([19, 20]),
                          ('pr2', 'gripper'): array([2]),
                          ('pr2', 'pose'): array([0, 1]),
                          ('robot_end_pose', 'gripper'): array([18]),
                          ('robot_end_pose', 'value'): array([16, 17]),
                          ('robot_init_pose', 'gripper'): array([9]),
                          ('robot_init_pose', 'value'): array([7, 8])},
           'stochastic_conditions': True,
           'symbolic_bound': 5,
           'target_dim': 4,
           'target_inds': {('can0_end_target', 'value'): array([0, 1]),
                           ('middle_target', 'value'): array([2, 3])},
           'targets': [{'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]},
                       {'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]}],
           'task_breaks': [],
           'task_durations': {'grasp': 20,
                              'putdown': 20},
           'task_encoding': {'grasp': array([ 1.,  0.]),
                             'putdown': array([ 0.,  1.])},
           'task_list': ['grasp',
                         'putdown'],
           'type': <class 'policy_hooks.namo.namo_agent.NAMOSortingAgent'>,
           'viewer': None,
           'x0': [array([ 0.,  0.,  0.,  2.,  2.,  0.,  0.,  0.,  0.,  0.,  2.,  2.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]),
                  array([ 0.,  0.,  0., -3.,  2.,  0.,  0.,  0.,  0.,  0., -3.,  2.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])]},
 'algorithm': {'grasp': {'T': 20,
                         'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f7ed159ce50>,
                         'conditions': 2,
                         'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                         'fit_dynamics': False,
                         'init_traj_distr': {'T': 20,
                                             'dQ': 3,
                                             'dU': 3,
                                             'dX': 5,
                                             'dt': 1.0,
                                             'init_var': 0.001,
                                             'pos_gains': 0.01,
                                             'type': <function init_pd at 0x7f7ed15852a8>,
                                             'x0': [array([ 0.,  0.,  0.,  2.,  2.]),
                                                    array([ 0.,  0.,  0., -3.,  2.])]},
                         'iterations': 10,
                         'kl_step': 1.0,
                         'max_ent_traj': 0.0,
                         'max_step_mult': 3.0,
                         'min_step_mult': 0.5,
                         'opt_wt': 1000.0,
                         'policy_opt': {'batch_size': 3000,
                                        'distilled_network_model': <function tf_network at 0x7f7eeb1e3938>,
                                        'distilled_network_params': {'dim_hidden': [300,
                                                                                    300],
                                                                     'image_channels': 3,
                                                                     'image_height': 140,
                                                                     'image_width': 140,
                                                                     'n_layers': 2,
                                                                     'num_filters': [5,
                                                                                     10],
                                                                     'obs_image_data': [],
                                                                     'obs_include': [1,
                                                                                     9,
                                                                                     6],
                                                                     'sensor_dims': {0: 3,
                                                                                     1: 5,
                                                                                     6: 15,
                                                                                     8: 2,
                                                                                     9: 4}},
                                        'gpu_fraction': 0.2,
                                        'image_channels': 3,
                                        'image_height': 140,
                                        'image_width': 140,
                                        'iterations': 5000,
                                        'lr': 0.0001,
                                        'network_model': <function tf_network at 0x7f7eeb1e3938>,
                                        'network_params': {'dim_hidden': [100],
                                                           'image_channels': 3,
                                                           'image_height': 140,
                                                           'image_width': 140,
                                                           'n_layers': 1,
                                                           'num_filters': [5,
                                                                           10],
                                                           'obs_image_data': [],
                                                           'obs_include': [1,
                                                                           9,
                                                                           6],
                                                           'sensor_dims': {0: 3,
                                                                           1: 5,
                                                                           6: 15,
                                                                           8: 2,
                                                                           9: 4}},
                                        'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f7eeb1df150>,
                                        'primitive_network_model': <function tf_classification_network at 0x7f7ed1597b90>,
                                        'task_list': ['grasp',
                                                      'putdown'],
                                        'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                        'weight_decay': 0.1,
                                        'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                         'policy_prior': {'max_clusters': 20,
                                          'max_samples': 20,
                                          'min_samples_per_cluster': 40,
                                          'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                         'policy_sample_mode': 'add',
                         'policy_transfer_coeff': 0.005,
                         'sample_on_policy': True,
                         'sample_ts_prob': 1.0,
                         'stochastic_conditions': True,
                         'traj_opt': {'covariance_damping': 0.01,
                                      'kl_threshold': 0.001,
                                      'min_temperature': 0.01,
                                      'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                         'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>},
               'putdown': {'T': 20,
                           'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f7ed159ce50>,
                           'conditions': 2,
                           'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                           'fit_dynamics': False,
                           'init_traj_distr': {'T': 20,
                                               'dQ': 3,
                                               'dU': 3,
                                               'dX': 5,
                                               'dt': 1.0,
                                               'init_var': 0.001,
                                               'pos_gains': 0.01,
                                               'type': <function init_pd at 0x7f7ed15852a8>,
                                               'x0': [array([ 0.,  0.,  0.,  2.,  2.]),
                                                      array([ 0.,  0.,  0., -3.,  2.])]},
                           'iterations': 10,
                           'kl_step': 1.0,
                           'max_ent_traj': 0.0,
                           'max_step_mult': 3.0,
                           'min_step_mult': 0.5,
                           'opt_wt': 1000.0,
                           'policy_opt': {'batch_size': 3000,
                                          'distilled_network_model': <function tf_network at 0x7f7eeb1e3938>,
                                          'distilled_network_params': {'dim_hidden': [300,
                                                                                      300],
                                                                       'image_channels': 3,
                                                                       'image_height': 140,
                                                                       'image_width': 140,
                                                                       'n_layers': 2,
                                                                       'num_filters': [5,
                                                                                       10],
                                                                       'obs_image_data': [],
                                                                       'obs_include': [1,
                                                                                       9,
                                                                                       6],
                                                                       'sensor_dims': {0: 3,
                                                                                       1: 5,
                                                                                       6: 15,
                                                                                       8: 2,
                                                                                       9: 4}},
                                          'gpu_fraction': 0.2,
                                          'image_channels': 3,
                                          'image_height': 140,
                                          'image_width': 140,
                                          'iterations': 5000,
                                          'lr': 0.0001,
                                          'network_model': <function tf_network at 0x7f7eeb1e3938>,
                                          'network_params': {'dim_hidden': [100],
                                                             'image_channels': 3,
                                                             'image_height': 140,
                                                             'image_width': 140,
                                                             'n_layers': 1,
                                                             'num_filters': [5,
                                                                             10],
                                                             'obs_image_data': [],
                                                             'obs_include': [1,
                                                                             9,
                                                                             6],
                                                             'sensor_dims': {0: 3,
                                                                             1: 5,
                                                                             6: 15,
                                                                             8: 2,
                                                                             9: 4}},
                                          'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f7eeb1df150>,
                                          'primitive_network_model': <function tf_classification_network at 0x7f7ed1597b90>,
                                          'task_list': ['grasp',
                                                        'putdown'],
                                          'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                          'weight_decay': 0.1,
                                          'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                           'policy_prior': {'max_clusters': 20,
                                            'max_samples': 20,
                                            'min_samples_per_cluster': 40,
                                            'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                           'policy_sample_mode': 'add',
                           'policy_transfer_coeff': 0.005,
                           'sample_on_policy': True,
                           'sample_ts_prob': 1.0,
                           'stochastic_conditions': True,
                           'traj_opt': {'covariance_damping': 0.01,
                                        'kl_threshold': 0.001,
                                        'min_temperature': 0.01,
                                        'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                           'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>}},
 'batch_size': 3000,
 'common': {'conditions': 2,
            'data_files_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/data_files/',
            'experiment_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/',
            'experiment_name': 'my_experiment_08-17-18_02-51',
            'log_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/log.txt',
            'target_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/target.npz'},
 'cost_f': <function cost_f at 0x7f7ed1570410>,
 'dQ': 3,
 'dim_hidden': [100],
 'goal_f': <function goal_f at 0x7f7ed1570488>,
 'gui_on': False,
 'hist_len': 5,
 'iterations': 10,
 'lr': 0.0001,
 'max_tree_depth': 3,
 'mode': 'position',
 'n_layers': 1,
 'num_conds': 2,
 'num_distilled_samples': 0,
 'num_rollouts': 8,
 'num_samples': 15,
 'opt_wt': 1000.0,
 'plan_f': <function <lambda> at 0x7f7ed154aaa0>,
 'policy_coeff': 1.0,
 'sample_on_policy': True,
 'stochastic_conditions': True,
 'take_optimal_sample': True,
 'target_f': <function get_next_target at 0x7f7ed1570320>,
 'task_durations': {'grasp': 20,
                    'putdown': 20},
 'task_list': ['grasp',
               'putdown'],
 'train_iterations': 5000,
 'verbose_policy_trials': 1,
 'verbose_trials': 1,
 'weight_decay': 0.1}


<class 'policy_hooks.traj_constr_cost.TrajConstrCost'>

STEP 0:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   2.00000000e+00
    2.00000000e+00]
 [ -8.66661256e-04   9.82187763e-02  -2.69604865e-02   2.00000000e+00
    2.00000000e+00]
 [  2.35488657e-02   1.15970761e-01  -2.30874103e-02   2.00000000e+00
    2.00000000e+00]
 [  5.60227111e-02   1.39583424e-01  -1.79251619e-02   2.00000000e+00
    2.00000000e+00]
 [  8.64244476e-02   1.61689401e-01  -1.30921230e-02   2.00000000e+00
    2.00000000e+00]
 [  1.11974061e-01   1.83525905e-01  -8.33017193e-03   2.00000000e+00
    2.00000000e+00]
 [  1.39034614e-01   2.02412635e-01  -4.19795141e-03   2.00000000e+00
    2.00000000e+00]
 [  1.62832960e-01   2.17248246e-01  -9.45564359e-04   2.00000000e+00
    2.00000000e+00]
 [  1.82544261e-01   2.31580853e-01   2.18757242e-03   2.00000000e+00
    2.00000000e+00]
 [  2.00503498e-01   2.44639456e-01   5.04224561e-03   2.00000000e+00
    2.00000000e+00]
 [  2.16745660e-01   2.56449580e-01   7.62399845e-03   2.00000000e+00
    2.00000000e+00]
 [  2.31395304e-01   2.67101765e-01   9.95258801e-03   2.00000000e+00
    2.00000000e+00]
 [  2.44456977e-01   2.76599258e-01   1.20287780e-02   2.00000000e+00
    2.00000000e+00]
 [  2.56153107e-01   2.85103828e-01   1.38879288e-02   2.00000000e+00
    2.00000000e+00]
 [  2.66665339e-01   2.92747527e-01   1.55588780e-02   2.00000000e+00
    2.00000000e+00]
 [  2.76112437e-01   2.99616784e-01   1.70605350e-02   2.00000000e+00
    2.00000000e+00]
 [  2.84595430e-01   3.05784971e-01   1.84089299e-02   2.00000000e+00
    2.00000000e+00]
 [  2.92204708e-01   3.11317891e-01   1.96184572e-02   2.00000000e+00
    2.00000000e+00]
 [  2.99032539e-01   3.16282570e-01   2.07037646e-02   2.00000000e+00
    2.00000000e+00]
 [  3.05161804e-01   3.20739299e-01   2.16780286e-02   2.00000000e+00
    2.00000000e+00]]

STEP 1:
[[ 0.3051618   0.3207393   0.02167803  2.          2.        ]
 [ 0.3138639   0.32706681  0.02306123  2.          2.        ]
 [ 0.31919682  0.3309446   0.02390893  2.          2.        ]
 [ 0.32346123  0.33404529  0.02458678  2.          2.        ]
 [ 0.32710376  0.33669388  0.02516579  2.          2.        ]
 [ 0.33031473  0.33902869  0.02567618  2.          2.        ]
 [ 0.33315954  0.34109718  0.02612836  2.          2.        ]
 [ 0.33582139  0.34303269  0.02655148  2.          2.        ]
 [ 0.33820212  0.34476379  0.02692991  2.          2.        ]
 [ 0.34032282  0.34630588  0.02726701  2.          2.        ]
 [ 0.34221968  0.3476851   0.02756851  2.          2.        ]
 [ 0.34392205  0.34892294  0.02783911  2.          2.        ]
 [ 0.34545562  0.35003802  0.02808288  2.          2.        ]
 [ 0.34683239  0.35103914  0.02830173  2.          2.        ]
 [ 0.34806708  0.35193685  0.02849797  2.          2.        ]
 [ 0.34917468  0.35274225  0.02867404  2.          2.        ]
 [ 0.35016894  0.35346523  0.02883207  2.          2.        ]
 [ 0.3510617   0.35411429  0.02897397  2.          2.        ]
 [ 0.35186297  0.35469702  0.02910136  2.          2.        ]
 [ 0.35258228  0.35521996  0.02921567  2.          2.        ]]

STEP 2:
[[ 0.35258228  0.35521996  0.02921567  2.          2.        ]
 [ 0.35360309  0.35596222  0.02937793  2.          2.        ]
 [ 0.35422871  0.35641715  0.02947739  2.          2.        ]
 [ 0.35472906  0.35678095  0.02955691  2.          2.        ]
 [ 0.35515636  0.35709172  0.02962484  2.          2.        ]
 [ 0.35553309  0.35736564  0.02968472  2.          2.        ]
 [ 0.35586682  0.35760829  0.02973778  2.          2.        ]
 [ 0.35617909  0.35783535  0.02978741  2.          2.        ]
 [ 0.35645843  0.35803843  0.02983181  2.          2.        ]
 [ 0.35670722  0.35821933  0.02987136  2.          2.        ]
 [ 0.35692978  0.35838112  0.02990673  2.          2.        ]
 [ 0.35712945  0.35852638  0.02993848  2.          2.        ]
 [ 0.35730937  0.35865721  0.02996708  2.          2.        ]
 [ 0.35747087  0.35877466  0.02999275  2.          2.        ]
 [ 0.35761571  0.35887998  0.03001577  2.          2.        ]
 [ 0.35774574  0.35897446  0.03003643  2.          2.        ]
 [ 0.35786232  0.3590593   0.03005497  2.          2.        ]
 [ 0.35796708  0.35913542  0.03007161  2.          2.        ]
 [ 0.35806108  0.35920382  0.03008657  2.          2.        ]
 [ 0.35814548  0.35926515  0.03009997  2.          2.        ]]

STEP 3:
[[ 0.35814548  0.35926515  0.03009997  2.          2.        ]
 [ 0.35826522  0.35935223  0.03011901  2.          2.        ]
 [ 0.35833862  0.35940561  0.03013068  2.          2.        ]
 [ 0.35839733  0.35944834  0.03014     2.          2.        ]
 [ 0.35844749  0.35948476  0.03014798  2.          2.        ]
 [ 0.35849169  0.35951689  0.03015501  2.          2.        ]
 [ 0.35853085  0.35954535  0.03016123  2.          2.        ]
 [ 0.35856748  0.35957199  0.03016706  2.          2.        ]
 [ 0.35860023  0.35959581  0.03017226  2.          2.        ]
 [ 0.35862941  0.35961702  0.0301769   2.          2.        ]
 [ 0.35865551  0.35963604  0.03018104  2.          2.        ]
 [ 0.358679    0.35965306  0.03018477  2.          2.        ]
 [ 0.3587001   0.35966837  0.03018812  2.          2.        ]
 [ 0.35871905  0.35968217  0.03019114  2.          2.        ]
 [ 0.35873604  0.35969451  0.03019384  2.          2.        ]
 [ 0.35875121  0.35970563  0.03019627  2.          2.        ]
 [ 0.35876489  0.35971558  0.03019844  2.          2.        ]
 [ 0.3587772   0.35972452  0.03020039  2.          2.        ]
 [ 0.35878822  0.35973254  0.03020215  2.          2.        ]
 [ 0.35879815  0.35973975  0.03020372  2.          2.        ]]

STEP 4:
[[ 0.35879815  0.35973975  0.03020372  2.          2.        ]
 [ 0.35881221  0.35974997  0.03020596  2.          2.        ]
 [ 0.35882083  0.3597562   0.03020732  2.          2.        ]
 [ 0.35882768  0.35976127  0.03020841  2.          2.        ]
 [ 0.35883361  0.35976553  0.03020935  2.          2.        ]
 [ 0.3588388   0.35976925  0.03021018  2.          2.        ]
 [ 0.35884333  0.35977262  0.03021091  2.          2.        ]
 [ 0.35884762  0.35977572  0.03021159  2.          2.        ]
 [ 0.35885149  0.35977852  0.0302122   2.          2.        ]
 [ 0.35885492  0.359781    0.03021274  2.          2.        ]
 [ 0.35885796  0.35978323  0.03021323  2.          2.        ]
 [ 0.35886079  0.3597852   0.03021366  2.          2.        ]
 [ 0.35886317  0.35978705  0.03021406  2.          2.        ]
 [ 0.35886541  0.35978866  0.03021441  2.          2.        ]
 [ 0.35886741  0.35979009  0.03021473  2.          2.        ]
 [ 0.35886922  0.3597914   0.03021501  2.          2.        ]
 [ 0.3588708   0.35979259  0.03021527  2.          2.        ]
 [ 0.35887226  0.35979366  0.0302155   2.          2.        ]
 [ 0.35887364  0.35979462  0.03021571  2.          2.        ]
 [ 0.35887471  0.35979542  0.03021589  2.          2.        ]]

