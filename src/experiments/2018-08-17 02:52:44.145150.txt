{'agent': {'T': 1,
           'action_inds': {('pr2', 'gripper'): array([2]),
                           ('pr2', 'pose'): array([0, 1])},
           'conditions': 2,
           'dU': 3,
           'dX': 5,
           'env': RaveGetEnvironment(1),
           'get_hl_plan': <function hl_plan_for_state at 0x7f5bce476f50>,
           'get_plan': <function get_plan at 0x7f5bce3ff0c8>,
           'hist_len': 5,
           'image_channels': 3,
           'image_height': 140,
           'image_width': 140,
           'model': None,
           'num_cans': 1,
           'obs_include': [1,
                           9,
                           6],
           'openrave_bodies': {'can0': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f5bce3e4250>,
                               'pr2': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f5bce3e4210>},
           'plans': {('grasp', 'can0'): <core.internal_repr.plan.Plan object at 0x7f5bce437e10>,
                     ('putdown', 'can0'): <core.internal_repr.plan.Plan object at 0x7f5bce3e4f90>},
           'sensor_dims': {0: 3,
                           1: 5,
                           6: 15,
                           8: 2,
                           9: 4},
           'solver': <__main__.NAMOPolicySolver object at 0x7f5bce429b90>,
           'state_include': [1],
           'state_inds': {('can0', 'pose'): array([3, 4]),
                          ('can0_end_target', 'value'): array([12, 13]),
                          ('can0_init_target', 'value'): array([10, 11]),
                          ('grasp0', 'value'): array([5, 6]),
                          ('middle_target', 'value'): array([14, 15]),
                          ('pdp_target0', 'gripper'): array([21]),
                          ('pdp_target0', 'value'): array([19, 20]),
                          ('pr2', 'gripper'): array([2]),
                          ('pr2', 'pose'): array([0, 1]),
                          ('robot_end_pose', 'gripper'): array([18]),
                          ('robot_end_pose', 'value'): array([16, 17]),
                          ('robot_init_pose', 'gripper'): array([9]),
                          ('robot_init_pose', 'value'): array([7, 8])},
           'stochastic_conditions': True,
           'symbolic_bound': 5,
           'target_dim': 4,
           'target_inds': {('can0_end_target', 'value'): array([0, 1]),
                           ('middle_target', 'value'): array([2, 3])},
           'targets': [{'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]},
                       {'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]}],
           'task_breaks': [],
           'task_durations': {'grasp': 20,
                              'putdown': 20},
           'task_encoding': {'grasp': array([ 1.,  0.]),
                             'putdown': array([ 0.,  1.])},
           'task_list': ['grasp',
                         'putdown'],
           'type': <class 'policy_hooks.namo.namo_agent.NAMOSortingAgent'>,
           'viewer': None,
           'x0': [array([ 0.,  0.,  0.,  0.,  4.,  0.,  0.,  0.,  0.,  0.,  0.,  4.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]),
                  array([ 0.,  0.,  0., -2.,  2.,  0.,  0.,  0.,  0.,  0., -2.,  2.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])]},
 'algorithm': {'grasp': {'T': 20,
                         'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f5bce429e50>,
                         'conditions': 2,
                         'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                         'fit_dynamics': False,
                         'init_traj_distr': {'T': 20,
                                             'dQ': 3,
                                             'dU': 3,
                                             'dX': 5,
                                             'dt': 1.0,
                                             'init_var': 0.001,
                                             'pos_gains': 0.01,
                                             'type': <function init_pd at 0x7f5bce4142a8>,
                                             'x0': [array([ 0.,  0.,  0.,  0.,  4.]),
                                                    array([ 0.,  0.,  0., -2.,  2.])]},
                         'iterations': 10,
                         'kl_step': 1.0,
                         'max_ent_traj': 0.0,
                         'max_step_mult': 3.0,
                         'min_step_mult': 0.5,
                         'opt_wt': 1000.0,
                         'policy_opt': {'batch_size': 3000,
                                        'distilled_network_model': <function tf_network at 0x7f5be8072938>,
                                        'distilled_network_params': {'dim_hidden': [300,
                                                                                    300],
                                                                     'image_channels': 3,
                                                                     'image_height': 140,
                                                                     'image_width': 140,
                                                                     'n_layers': 2,
                                                                     'num_filters': [5,
                                                                                     10],
                                                                     'obs_image_data': [],
                                                                     'obs_include': [1,
                                                                                     9,
                                                                                     6],
                                                                     'sensor_dims': {0: 3,
                                                                                     1: 5,
                                                                                     6: 15,
                                                                                     8: 2,
                                                                                     9: 4}},
                                        'gpu_fraction': 0.2,
                                        'image_channels': 3,
                                        'image_height': 140,
                                        'image_width': 140,
                                        'iterations': 5000,
                                        'lr': 0.0001,
                                        'network_model': <function tf_network at 0x7f5be8072938>,
                                        'network_params': {'dim_hidden': [100],
                                                           'image_channels': 3,
                                                           'image_height': 140,
                                                           'image_width': 140,
                                                           'n_layers': 1,
                                                           'num_filters': [5,
                                                                           10],
                                                           'obs_image_data': [],
                                                           'obs_include': [1,
                                                                           9,
                                                                           6],
                                                           'sensor_dims': {0: 3,
                                                                           1: 5,
                                                                           6: 15,
                                                                           8: 2,
                                                                           9: 4}},
                                        'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f5be806e150>,
                                        'primitive_network_model': <function tf_classification_network at 0x7f5bce422b90>,
                                        'task_list': ['grasp',
                                                      'putdown'],
                                        'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                        'weight_decay': 0.1,
                                        'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                         'policy_prior': {'max_clusters': 20,
                                          'max_samples': 20,
                                          'min_samples_per_cluster': 40,
                                          'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                         'policy_sample_mode': 'add',
                         'policy_transfer_coeff': 0.005,
                         'sample_on_policy': True,
                         'sample_ts_prob': 0.2,
                         'stochastic_conditions': True,
                         'traj_opt': {'covariance_damping': 0.01,
                                      'kl_threshold': 0.001,
                                      'min_temperature': 0.01,
                                      'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                         'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>},
               'putdown': {'T': 20,
                           'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f5bce429e50>,
                           'conditions': 2,
                           'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                           'fit_dynamics': False,
                           'init_traj_distr': {'T': 20,
                                               'dQ': 3,
                                               'dU': 3,
                                               'dX': 5,
                                               'dt': 1.0,
                                               'init_var': 0.001,
                                               'pos_gains': 0.01,
                                               'type': <function init_pd at 0x7f5bce4142a8>,
                                               'x0': [array([ 0.,  0.,  0.,  0.,  4.]),
                                                      array([ 0.,  0.,  0., -2.,  2.])]},
                           'iterations': 10,
                           'kl_step': 1.0,
                           'max_ent_traj': 0.0,
                           'max_step_mult': 3.0,
                           'min_step_mult': 0.5,
                           'opt_wt': 1000.0,
                           'policy_opt': {'batch_size': 3000,
                                          'distilled_network_model': <function tf_network at 0x7f5be8072938>,
                                          'distilled_network_params': {'dim_hidden': [300,
                                                                                      300],
                                                                       'image_channels': 3,
                                                                       'image_height': 140,
                                                                       'image_width': 140,
                                                                       'n_layers': 2,
                                                                       'num_filters': [5,
                                                                                       10],
                                                                       'obs_image_data': [],
                                                                       'obs_include': [1,
                                                                                       9,
                                                                                       6],
                                                                       'sensor_dims': {0: 3,
                                                                                       1: 5,
                                                                                       6: 15,
                                                                                       8: 2,
                                                                                       9: 4}},
                                          'gpu_fraction': 0.2,
                                          'image_channels': 3,
                                          'image_height': 140,
                                          'image_width': 140,
                                          'iterations': 5000,
                                          'lr': 0.0001,
                                          'network_model': <function tf_network at 0x7f5be8072938>,
                                          'network_params': {'dim_hidden': [100],
                                                             'image_channels': 3,
                                                             'image_height': 140,
                                                             'image_width': 140,
                                                             'n_layers': 1,
                                                             'num_filters': [5,
                                                                             10],
                                                             'obs_image_data': [],
                                                             'obs_include': [1,
                                                                             9,
                                                                             6],
                                                             'sensor_dims': {0: 3,
                                                                             1: 5,
                                                                             6: 15,
                                                                             8: 2,
                                                                             9: 4}},
                                          'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f5be806e150>,
                                          'primitive_network_model': <function tf_classification_network at 0x7f5bce422b90>,
                                          'task_list': ['grasp',
                                                        'putdown'],
                                          'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                          'weight_decay': 0.1,
                                          'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                           'policy_prior': {'max_clusters': 20,
                                            'max_samples': 20,
                                            'min_samples_per_cluster': 40,
                                            'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                           'policy_sample_mode': 'add',
                           'policy_transfer_coeff': 0.005,
                           'sample_on_policy': True,
                           'sample_ts_prob': 0.2,
                           'stochastic_conditions': True,
                           'traj_opt': {'covariance_damping': 0.01,
                                        'kl_threshold': 0.001,
                                        'min_temperature': 0.01,
                                        'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                           'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>}},
 'batch_size': 3000,
 'common': {'conditions': 2,
            'data_files_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/data_files/',
            'experiment_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/',
            'experiment_name': 'my_experiment_08-17-18_02-50',
            'log_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/log.txt',
            'target_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/target.npz'},
 'cost_f': <function cost_f at 0x7f5bce3ff410>,
 'dQ': 3,
 'dim_hidden': [100],
 'goal_f': <function goal_f at 0x7f5bce3ff488>,
 'gui_on': False,
 'hist_len': 5,
 'iterations': 10,
 'lr': 0.0001,
 'max_tree_depth': 3,
 'mode': 'position',
 'n_layers': 1,
 'num_conds': 2,
 'num_distilled_samples': 0,
 'num_rollouts': 8,
 'num_samples': 15,
 'opt_wt': 1000.0,
 'plan_f': <function <lambda> at 0x7f5bce3d9aa0>,
 'policy_coeff': 1.0,
 'sample_on_policy': True,
 'stochastic_conditions': True,
 'take_optimal_sample': True,
 'target_f': <function get_next_target at 0x7f5bce3ff320>,
 'task_durations': {'grasp': 20,
                    'putdown': 20},
 'task_list': ['grasp',
               'putdown'],
 'train_iterations': 5000,
 'verbose_policy_trials': 1,
 'verbose_trials': 1,
 'weight_decay': 0.1}


<class 'policy_hooks.traj_constr_cost.TrajConstrCost'>

STEP 0:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    4.00000000e+00]
 [ -5.55819608e-02   1.49846956e-01  -2.00859979e-02   0.00000000e+00
    4.00000000e+00]
 [ -4.29023206e-02   1.83394223e-01  -2.03603283e-02   0.00000000e+00
    4.00000000e+00]
 [ -4.66219112e-02   2.36930281e-01  -1.75519139e-02   0.00000000e+00
    4.00000000e+00]
 [ -5.18392287e-02   2.95383751e-01  -1.43288933e-02   0.00000000e+00
    4.00000000e+00]
 [ -5.70220873e-02   3.54642928e-01  -1.10758590e-02   0.00000000e+00
    4.00000000e+00]
 [ -6.17081933e-02   4.12460268e-01  -7.95220584e-03   0.00000000e+00
    4.00000000e+00]
 [ -6.41905814e-02   4.62034523e-01  -5.48199564e-03   0.00000000e+00
    4.00000000e+00]
 [ -6.67164549e-02   5.08700371e-01  -3.13107297e-03   0.00000000e+00
    4.00000000e+00]
 [ -6.91103190e-02   5.53316355e-01  -8.86276364e-04   0.00000000e+00
    4.00000000e+00]
 [ -7.13047087e-02   5.95717132e-01   1.23614445e-03   0.00000000e+00
    4.00000000e+00]
 [ -7.46786818e-02   6.35880530e-01   3.42910364e-03   0.00000000e+00
    4.00000000e+00]
 [ -7.86215439e-02   6.73759699e-01   5.60356677e-03   0.00000000e+00
    4.00000000e+00]
 [ -8.27766955e-02   7.09537745e-01   7.71716237e-03   0.00000000e+00
    4.00000000e+00]
 [ -8.70705470e-02   7.43307710e-01   9.76368226e-03   0.00000000e+00
    4.00000000e+00]
 [ -9.14966241e-02   7.75112510e-01   1.17440782e-02   0.00000000e+00
    4.00000000e+00]
 [ -9.60883126e-02   8.05030286e-01   1.36663467e-02   0.00000000e+00
    4.00000000e+00]
 [ -1.00765198e-01   8.33162844e-01   1.55237094e-02   0.00000000e+00
    4.00000000e+00]
 [ -1.05461963e-01   8.59596491e-01   1.73108242e-02   0.00000000e+00
    4.00000000e+00]
 [ -1.10144548e-01   8.84407580e-01   1.90262385e-02   0.00000000e+00
    4.00000000e+00]]

STEP 1:
[[-0.11014455  0.88440758  0.01902624  0.          4.        ]
 [-0.11724512  0.92142516  0.02160169  0.          4.        ]
 [-0.12267897  0.94559842  0.02339367  0.          4.        ]
 [-0.12744047  0.96582806  0.02492313  0.          4.        ]
 [-0.13178925  0.98393607  0.02630424  0.          4.        ]
 [-0.13595167  1.00068116  0.02760089  0.          4.        ]
 [-0.13990828  1.01608574  0.02881135  0.          4.        ]
 [-0.14389315  1.03088963  0.03000002  0.          4.        ]
 [-0.14772907  1.04466462  0.03112381  0.          4.        ]
 [-0.15138806  1.05743897  0.03218005  0.          4.        ]
 [-0.15488827  1.06930768  0.03317536  0.          4.        ]
 [-0.15823761  1.08033967  0.03411379  0.          4.        ]
 [-0.16144839  1.09061229  0.03500039  0.          4.        ]
 [-0.16451232  1.10015762  0.03583537  0.          4.        ]
 [-0.16742815  1.10901594  0.0366203   0.          4.        ]
 [-0.17020005  1.11723208  0.03735768  0.          4.        ]
 [-0.17283235  1.1248492   0.03804995  0.          4.        ]
 [-0.17532931  1.13190758  0.03869945  0.          4.        ]
 [-0.17769429  1.13844371  0.03930822  0.          4.        ]
 [-0.17993122  1.14449215  0.03987828  0.          4.        ]]

STEP 2:
[[-0.17993122  1.14449215  0.03987828  0.          4.        ]
 [-0.18326071  1.15317607  0.04071313  0.          4.        ]
 [-0.1855161   1.15890348  0.04127188  0.          4.        ]
 [-0.18740939  1.16362977  0.04173747  0.          4.        ]
 [-0.18909214  1.16777623  0.04214897  0.          4.        ]
 [-0.19065367  1.17155409  0.04252778  0.          4.        ]
 [-0.19209574  1.1749717   0.04287457  0.          4.        ]
 [-0.19350959  1.17822826  0.04321054  0.          4.        ]
 [-0.19483005  1.18122613  0.04352243  0.          4.        ]
 [-0.19605699  1.18396914  0.04381042  0.          4.        ]
 [-0.19720258  1.18648458  0.04407733  0.          4.        ]
 [-0.19827396  1.18879247  0.04432506  0.          4.        ]
 [-0.19927907  1.19091594  0.04455566  0.          4.        ]
 [-0.20021783  1.19286561  0.04476958  0.          4.        ]
 [-0.20109314  1.19465244  0.04496772  0.          4.        ]
 [-0.20190918  1.19628906  0.04515119  0.          4.        ]
 [-0.20266975  1.19778728  0.04532103  0.          4.        ]
 [-0.20337832  1.19915855  0.04547819  0.          4.        ]
 [-0.20403787  1.20041239  0.04562351  0.          4.        ]
 [-0.20465119  1.20155799  0.04575777  0.          4.        ]]

STEP 3:
[[-0.20465119  1.20155799  0.04575777  0.          4.        ]
 [-0.20555857  1.2031436   0.04595173  0.          4.        ]
 [-0.20614696  1.20419955  0.04607867  0.          4.        ]
 [-0.20663247  1.20505905  0.04618291  0.          4.        ]
 [-0.20705901  1.20579791  0.04627382  0.          4.        ]
 [-0.20744942  1.2064606   0.04635641  0.          4.        ]
 [-0.20780528  1.20704937  0.04643103  0.          4.        ]
 [-0.20814967  1.20760512  0.04650267  0.          4.        ]
 [-0.20846653  1.20811033  0.04656832  0.          4.        ]
 [-0.20875692  1.20856559  0.04662814  0.          4.        ]
 [-0.2090245   1.20897639  0.04668289  0.          4.        ]
 [-0.20927155  1.20934749  0.04673309  0.          4.        ]
 [-0.20950042  1.20968366  0.04677927  0.          4.        ]
 [-0.20971145  1.2099874   0.04682157  0.          4.        ]
 [-0.20990571  1.21026123  0.04686027  0.          4.        ]
 [-0.21008456  1.21050763  0.04689566  0.          4.        ]
 [-0.21024922  1.21072936  0.04692801  0.          4.        ]
 [-0.21040072  1.21092844  0.04695757  0.          4.        ]
 [-0.21053998  1.21110713  0.04698455  0.          4.        ]
 [-0.21066794  1.21126723  0.04700917  0.          4.        ]]

STEP 4:
[[-0.21066794  1.21126723  0.04700917  0.          4.        ]
 [-0.21085638  1.21147549  0.04704425  0.          4.        ]
 [-0.2109745   1.21161652  0.04706668  0.          4.        ]
 [-0.2110706   1.21172869  0.04708483  0.          4.        ]
 [-0.21115421  1.21182144  0.04710041  0.          4.        ]
 [-0.21122983  1.21190226  0.04711437  0.          4.        ]
 [-0.21129794  1.21197128  0.04712679  0.          4.        ]
 [-0.21136314  1.2120353   0.04713857  0.          4.        ]
 [-0.21142228  1.21209192  0.0471492   0.          4.        ]
 [-0.21147576  1.21214116  0.04715872  0.          4.        ]
 [-0.2115244   1.21218383  0.04716731  0.          4.        ]
 [-0.21156873  1.21222091  0.04717505  0.          4.        ]
 [-0.2116093   1.21225321  0.04718206  0.          4.        ]
 [-0.21164618  1.21228111  0.04718836  0.          4.        ]
 [-0.21167968  1.21230495  0.04719403  0.          4.        ]
 [-0.21171008  1.21232498  0.04719912  0.          4.        ]
 [-0.21173763  1.21234226  0.04720368  0.          4.        ]
 [-0.21176267  1.21235657  0.04720776  0.          4.        ]
 [-0.21178532  1.21236825  0.04721141  0.          4.        ]
 [-0.21180579  1.21237791  0.04721466  0.          4.        ]]

