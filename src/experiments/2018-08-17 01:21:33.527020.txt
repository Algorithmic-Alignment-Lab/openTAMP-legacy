{'agent': {'T': 1,
           'action_inds': {('pr2', 'gripper'): array([2]),
                           ('pr2', 'pose'): array([0, 1])},
           'conditions': 1,
           'dU': 3,
           'dX': 5,
           'env': RaveGetEnvironment(24),
           'get_hl_plan': <function hl_plan_for_state at 0x7fbda60d8050>,
           'get_plan': <function get_plan at 0x7fbda60d8140>,
           'hist_len': 3,
           'image_channels': 3,
           'image_height': 140,
           'image_width': 140,
           'model': None,
           'num_cans': 1,
           'obs_include': [1,
                           9,
                           6],
           'openrave_bodies': {'can0': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7fbd9d1f0c90>,
                               'pr2': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7fbd9d1f0c50>},
           'plans': {('grasp', 'can0'): <core.internal_repr.plan.Plan object at 0x7fbd9d1dbdd0>,
                     ('putdown', 'can0'): <core.internal_repr.plan.Plan object at 0x7fbd7db41590>},
           'sensor_dims': {0: 3,
                           1: 5,
                           6: 9,
                           8: 2,
                           9: 4},
           'solver': <__main__.NAMOPolicySolver object at 0x7fbe285f3050>,
           'state_include': [1],
           'state_inds': {('can0', 'pose'): array([3, 4]),
                          ('can0_end_target', 'value'): array([12, 13]),
                          ('can0_init_target', 'value'): array([10, 11]),
                          ('grasp0', 'value'): array([5, 6]),
                          ('middle_target', 'value'): array([14, 15]),
                          ('pdp_target0', 'gripper'): array([21]),
                          ('pdp_target0', 'value'): array([19, 20]),
                          ('pr2', 'gripper'): array([2]),
                          ('pr2', 'pose'): array([0, 1]),
                          ('robot_end_pose', 'gripper'): array([18]),
                          ('robot_end_pose', 'value'): array([16, 17]),
                          ('robot_init_pose', 'gripper'): array([9]),
                          ('robot_init_pose', 'value'): array([7, 8])},
           'stochastic_conditions': True,
           'symbolic_bound': 5,
           'target_dim': 4,
           'target_inds': {('can0_end_target', 'value'): array([0, 1]),
                           ('middle_target', 'value'): array([2, 3])},
           'targets': [{'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]}],
           'task_breaks': [],
           'task_durations': {'grasp': 20,
                              'putdown': 20},
           'task_encoding': {'grasp': array([ 1.,  0.]),
                             'putdown': array([ 0.,  1.])},
           'task_list': ['grasp',
                         'putdown'],
           'type': <class 'policy_hooks.namo.namo_agent.NAMOSortingAgent'>,
           'viewer': None,
           'x0': [array([ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])]},
 'algorithm': {'grasp': {'T': 20,
                         'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7fbd9d24a510>,
                         'conditions': 1,
                         'cost': {'costs': [{'data_types': {1: {'target_state': array([[ 0.,  0.,  0.,  0.,  0.]]),
                                                                'wp': array([ 1.,  1.,  1.,  1.,  1.]),
                                                                'wp_final_multiplier': 1.0}},
                                             'ramp_option': 1,
                                             'type': <class 'policy_hooks.state_traj_cost.StateTrajCost'>},
                                            {'data_types': {0: {'target_state': array([[ 0.,  0.,  0.]]),
                                                                'wp': array([[ 1.,  1.,  1.]])}},
                                             'ramp_option': 1,
                                             'type': <class 'policy_hooks.action_traj_cost.ActionTrajCost'>}],
                                  'type': <class 'gps.algorithm.cost.cost_sum.CostSum'>,
                                  'weights': [1.0,
                                              1.0]},
                         'fit_dynamics': False,
                         'init_traj_distr': {'T': 20,
                                             'dQ': 3,
                                             'dU': 3,
                                             'dX': 5,
                                             'dt': 1.0,
                                             'init_var': 1.0,
                                             'pos_gains': 0.01,
                                             'type': <function init_pd at 0x7fbda60ed320>,
                                             'x0': [array([ 0.,  0.,  0.,  1., -1.])]},
                         'iterations': 10,
                         'kl_step': 0.1,
                         'max_ent_traj': 0.0,
                         'max_step_mult': 3.0,
                         'min_step_mult': 0.5,
                         'opt_wt': 10000.0,
                         'policy_opt': {'batch_size': 3000,
                                        'distilled_network_model': <function tf_network at 0x7fbdbfd499b0>,
                                        'distilled_network_params': {'dim_hidden': [300,
                                                                                    300],
                                                                     'image_channels': 3,
                                                                     'image_height': 140,
                                                                     'image_width': 140,
                                                                     'n_layers': 2,
                                                                     'num_filters': [5,
                                                                                     10],
                                                                     'obs_image_data': [],
                                                                     'obs_include': [1,
                                                                                     9,
                                                                                     6],
                                                                     'sensor_dims': {0: 3,
                                                                                     1: 5,
                                                                                     6: 9,
                                                                                     8: 2,
                                                                                     9: 4}},
                                        'gpu_fraction': 0.2,
                                        'image_channels': 3,
                                        'image_height': 140,
                                        'image_width': 140,
                                        'iterations': 1000,
                                        'lr': 0.001,
                                        'network_model': <function tf_network at 0x7fbdbfd499b0>,
                                        'network_params': {'dim_hidden': [100],
                                                           'image_channels': 3,
                                                           'image_height': 140,
                                                           'image_width': 140,
                                                           'n_layers': 1,
                                                           'num_filters': [5,
                                                                           10],
                                                           'obs_image_data': [],
                                                           'obs_include': [1,
                                                                           9,
                                                                           6],
                                                           'sensor_dims': {0: 3,
                                                                           1: 5,
                                                                           6: 9,
                                                                           8: 2,
                                                                           9: 4}},
                                        'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7fbd7db41490>,
                                        'primitive_network_model': <function tf_classification_network at 0x7fbda60fdc08>,
                                        'task_list': ['grasp',
                                                      'putdown'],
                                        'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                        'weight_decay': 0.1,
                                        'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                         'policy_prior': {'max_clusters': 20,
                                          'max_samples': 20,
                                          'min_samples_per_cluster': 40,
                                          'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                         'policy_sample_mode': 'add',
                         'policy_transfer_coeff': 0.005,
                         'sample_on_policy': True,
                         'sample_ts_prob': 0.2,
                         'stochastic_conditions': True,
                         'traj_opt': {'covariance_damping': 10,
                                      'kl_threshold': 0.001,
                                      'min_temperature': 0.01,
                                      'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                         'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>},
               'putdown': {'T': 20,
                           'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7fbd9d24a510>,
                           'conditions': 1,
                           'cost': {'costs': [{'data_types': {1: {'target_state': array([[ 0.,  0.,  0.,  0.,  0.]]),
                                                                  'wp': array([ 1.,  1.,  1.,  1.,  1.]),
                                                                  'wp_final_multiplier': 1.0}},
                                               'ramp_option': 1,
                                               'type': <class 'policy_hooks.state_traj_cost.StateTrajCost'>},
                                              {'data_types': {0: {'target_state': array([[ 0.,  0.,  0.]]),
                                                                  'wp': array([[ 1.,  1.,  1.]])}},
                                               'ramp_option': 1,
                                               'type': <class 'policy_hooks.action_traj_cost.ActionTrajCost'>}],
                                    'type': <class 'gps.algorithm.cost.cost_sum.CostSum'>,
                                    'weights': [1.0,
                                                1.0]},
                           'fit_dynamics': False,
                           'init_traj_distr': {'T': 20,
                                               'dQ': 3,
                                               'dU': 3,
                                               'dX': 5,
                                               'dt': 1.0,
                                               'init_var': 1.0,
                                               'pos_gains': 0.01,
                                               'type': <function init_pd at 0x7fbda60ed320>,
                                               'x0': [array([ 0.,  0.,  0.,  1., -1.])]},
                           'iterations': 10,
                           'kl_step': 0.1,
                           'max_ent_traj': 0.0,
                           'max_step_mult': 3.0,
                           'min_step_mult': 0.5,
                           'opt_wt': 10000.0,
                           'policy_opt': {'batch_size': 3000,
                                          'distilled_network_model': <function tf_network at 0x7fbdbfd499b0>,
                                          'distilled_network_params': {'dim_hidden': [300,
                                                                                      300],
                                                                       'image_channels': 3,
                                                                       'image_height': 140,
                                                                       'image_width': 140,
                                                                       'n_layers': 2,
                                                                       'num_filters': [5,
                                                                                       10],
                                                                       'obs_image_data': [],
                                                                       'obs_include': [1,
                                                                                       9,
                                                                                       6],
                                                                       'sensor_dims': {0: 3,
                                                                                       1: 5,
                                                                                       6: 9,
                                                                                       8: 2,
                                                                                       9: 4}},
                                          'gpu_fraction': 0.2,
                                          'image_channels': 3,
                                          'image_height': 140,
                                          'image_width': 140,
                                          'iterations': 1000,
                                          'lr': 0.001,
                                          'network_model': <function tf_network at 0x7fbdbfd499b0>,
                                          'network_params': {'dim_hidden': [100],
                                                             'image_channels': 3,
                                                             'image_height': 140,
                                                             'image_width': 140,
                                                             'n_layers': 1,
                                                             'num_filters': [5,
                                                                             10],
                                                             'obs_image_data': [],
                                                             'obs_include': [1,
                                                                             9,
                                                                             6],
                                                             'sensor_dims': {0: 3,
                                                                             1: 5,
                                                                             6: 9,
                                                                             8: 2,
                                                                             9: 4}},
                                          'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7fbd7db41490>,
                                          'primitive_network_model': <function tf_classification_network at 0x7fbda60fdc08>,
                                          'task_list': ['grasp',
                                                        'putdown'],
                                          'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                          'weight_decay': 0.1,
                                          'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                           'policy_prior': {'max_clusters': 20,
                                            'max_samples': 20,
                                            'min_samples_per_cluster': 40,
                                            'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                           'policy_sample_mode': 'add',
                           'policy_transfer_coeff': 0.005,
                           'sample_on_policy': True,
                           'sample_ts_prob': 0.2,
                           'stochastic_conditions': True,
                           'traj_opt': {'covariance_damping': 10,
                                        'kl_threshold': 0.001,
                                        'min_temperature': 0.01,
                                        'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                           'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>}},
 'batch_size': 3000,
 'common': {'conditions': 1,
            'data_files_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/data_files/',
            'experiment_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/',
            'experiment_name': 'my_experiment_08-17-18_00-19',
            'log_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/log.txt',
            'target_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/target.npz'},
 'cost_f': <function cost_f at 0x7fbda60d8488>,
 'dQ': 3,
 'dim_hidden': [100],
 'goal_f': <function goal_f at 0x7fbda60d8500>,
 'gui_on': False,
 'hist_len': 3,
 'iterations': 10,
 'lr': 0.001,
 'max_tree_depth': 3,
 'mode': 'position',
 'n_layers': 1,
 'num_conds': 1,
 'num_distilled_samples': 0,
 'num_rollouts': 8,
 'num_samples': 15,
 'opt_wt': 10000.0,
 'plan_f': <function <lambda> at 0x7fbda60a3848>,
 'policy_coeff': 1.0,
 'sample_on_policy': True,
 'stochastic_conditions': True,
 'take_optimal_sample': True,
 'target_f': <function get_next_target at 0x7fbda60d8398>,
 'task_durations': {'grasp': 20,
                    'putdown': 20},
 'task_list': ['grasp',
               'putdown'],
 'train_iterations': 1000,
 'verbose_policy_trials': 1,
 'verbose_trials': 1,
 'weight_decay': 0.1}


<class 'gps.algorithm.cost.cost_sum.CostSum'>

STEP 0:
[[ 0.          0.          0.          1.         -1.        ]
 [ 0.19143155 -0.23065308  0.0205258   1.         -1.        ]
 [ 0.26303715 -0.33843434  0.03181655  1.         -1.        ]
 [ 0.31742758 -0.42030174  0.04039411  1.         -1.        ]
 [ 0.37188941 -0.50227565  0.04898363  1.         -1.        ]
 [ 0.41212505 -0.56283748  0.05532891  1.         -1.        ]
 [ 0.44404703 -0.61088574  0.06036318  1.         -1.        ]
 [ 0.47037876 -0.65051955  0.06451589  1.         -1.        ]
 [ 0.49133062 -0.68205571  0.06782012  1.         -1.        ]
 [ 0.50812107 -0.70732832  0.07046808  1.         -1.        ]
 [ 0.52165002 -0.72769171  0.07260168  1.         -1.        ]
 [ 0.53250474 -0.74403012  0.07431354  1.         -1.        ]
 [ 0.54121947 -0.75714719  0.07568791  1.         -1.        ]
 [ 0.54822123 -0.76768607  0.07679213  1.         -1.        ]
 [ 0.55384386 -0.77614921  0.07767887  1.         -1.        ]
 [ 0.55835932 -0.78294581  0.07839098  1.         -1.        ]
 [ 0.56198609 -0.78840446  0.07896294  1.         -1.        ]
 [ 0.56489867 -0.79278857  0.07942226  1.         -1.        ]
 [ 0.56723779 -0.79630947  0.07979118  1.         -1.        ]
 [ 0.56911653 -0.79913718  0.08008745  1.         -1.        ]]

STEP 1:
[[ 0.56911653 -0.79913718  0.08008745  1.         -1.        ]
 [ 0.57142949 -0.8026185   0.08045222  1.         -1.        ]
 [ 0.57263374 -0.80443126  0.08064215  1.         -1.        ]
 [ 0.57345808 -0.80567187  0.08077215  1.         -1.        ]
 [ 0.57408547 -0.80661625  0.08087107  1.         -1.        ]
 [ 0.57462454 -0.8074277   0.08095609  1.         -1.        ]
 [ 0.57504988 -0.80806786  0.08102319  1.         -1.        ]
 [ 0.57538879 -0.80857807  0.08107663  1.         -1.        ]
 [ 0.57566327 -0.80899101  0.08111989  1.         -1.        ]
 [ 0.57588309 -0.8093223   0.08115459  1.         -1.        ]
 [ 0.57605964 -0.80958778  0.08118244  1.         -1.        ]
 [ 0.5762015  -0.80980128  0.08120479  1.         -1.        ]
 [ 0.57631534 -0.8099727   0.08122276  1.         -1.        ]
 [ 0.57640684 -0.81011033  0.08123717  1.         -1.        ]
 [ 0.57648027 -0.8102209   0.08124876  1.         -1.        ]
 [ 0.57653928 -0.81030965  0.08125806  1.         -1.        ]
 [ 0.57658666 -0.81038105  0.08126553  1.         -1.        ]
 [ 0.57662475 -0.81043828  0.08127154  1.         -1.        ]
 [ 0.57665533 -0.81048429  0.08127636  1.         -1.        ]
 [ 0.57667983 -0.81052125  0.08128022  1.         -1.        ]]

STEP 2:
[[ 0.57667983 -0.81052125  0.08128022  1.         -1.        ]
 [ 0.57671005 -0.81056666  0.08128499  1.         -1.        ]
 [ 0.57672572 -0.81059039  0.08128748  1.         -1.        ]
 [ 0.57673651 -0.8106066   0.08128918  1.         -1.        ]
 [ 0.57674474 -0.81061888  0.08129047  1.         -1.        ]
 [ 0.57675171 -0.81062961  0.08129157  1.         -1.        ]
 [ 0.57675743 -0.81063789  0.08129244  1.         -1.        ]
 [ 0.57676178 -0.81064463  0.08129317  1.         -1.        ]
 [ 0.57676536 -0.81064999  0.08129372  1.         -1.        ]
 [ 0.57676822 -0.81065428  0.08129416  1.         -1.        ]
 [ 0.57677054 -0.81065786  0.08129452  1.         -1.        ]
 [ 0.57677239 -0.81066066  0.08129483  1.         -1.        ]
 [ 0.57677388 -0.81066281  0.08129507  1.         -1.        ]
 [ 0.57677507 -0.81066459  0.08129524  1.         -1.        ]
 [ 0.57677603 -0.81066608  0.0812954   1.         -1.        ]
 [ 0.5767768  -0.81066728  0.08129552  1.         -1.        ]
 [ 0.57677746 -0.81066817  0.08129562  1.         -1.        ]
 [ 0.57677799 -0.810669    0.08129568  1.         -1.        ]
 [ 0.57677841 -0.8106696   0.08129576  1.         -1.        ]
 [ 0.57677865 -0.8106702   0.0812958   1.         -1.        ]]

STEP 3:
[[ 0.57677865 -0.8106702   0.0812958   1.         -1.        ]
 [ 0.57677907 -0.81067067  0.08129588  1.         -1.        ]
 [ 0.57677931 -0.81067109  0.08129591  1.         -1.        ]
 [ 0.57677943 -0.81067127  0.08129594  1.         -1.        ]
 [ 0.57677954 -0.81067139  0.08129596  1.         -1.        ]
 [ 0.57677954 -0.81067145  0.08129597  1.         -1.        ]
 [ 0.57677972 -0.81067163  0.08129598  1.         -1.        ]
 [ 0.57677978 -0.81067163  0.08129599  1.         -1.        ]
 [ 0.57677978 -0.81067169  0.081296    1.         -1.        ]
 [ 0.57677984 -0.81067181  0.081296    1.         -1.        ]
 [ 0.57677984 -0.81067187  0.081296    1.         -1.        ]
 [ 0.5767799  -0.81067193  0.081296    1.         -1.        ]
 [ 0.5767799  -0.81067193  0.08129601  1.         -1.        ]
 [ 0.5767799  -0.81067193  0.08129601  1.         -1.        ]
 [ 0.5767799  -0.81067199  0.08129601  1.         -1.        ]
 [ 0.57677996 -0.81067204  0.08129601  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129601  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]]

STEP 4:
[[ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]
 [ 0.57677996 -0.8106721   0.08129602  1.         -1.        ]]

