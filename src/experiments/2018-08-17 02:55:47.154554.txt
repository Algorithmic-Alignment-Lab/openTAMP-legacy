{'agent': {'T': 1,
           'action_inds': {('pr2', 'gripper'): array([2]),
                           ('pr2', 'pose'): array([0, 1])},
           'conditions': 2,
           'dU': 3,
           'dX': 5,
           'env': RaveGetEnvironment(2),
           'get_hl_plan': <function hl_plan_for_state at 0x7f7ed15e7f50>,
           'get_plan': <function get_plan at 0x7f7ed15700c8>,
           'hist_len': 10,
           'image_channels': 3,
           'image_height': 140,
           'image_width': 140,
           'model': None,
           'num_cans': 1,
           'obs_include': [1,
                           9,
                           6],
           'openrave_bodies': {'can0': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f7ec1040d10>,
                               'pr2': <core.util_classes.openrave_body.OpenRAVEBody object at 0x7f7ec1040c10>},
           'plans': {('grasp', 'can0'): <core.internal_repr.plan.Plan object at 0x7f7ec10a1850>,
                     ('putdown', 'can0'): <core.internal_repr.plan.Plan object at 0x7f7ec46fee90>},
           'sensor_dims': {0: 3,
                           1: 5,
                           6: 30,
                           8: 2,
                           9: 4},
           'solver': <__main__.NAMOPolicySolver object at 0x7f7ec16d6650>,
           'state_include': [1],
           'state_inds': {('can0', 'pose'): array([3, 4]),
                          ('can0_end_target', 'value'): array([12, 13]),
                          ('can0_init_target', 'value'): array([10, 11]),
                          ('grasp0', 'value'): array([5, 6]),
                          ('middle_target', 'value'): array([14, 15]),
                          ('pdp_target0', 'gripper'): array([21]),
                          ('pdp_target0', 'value'): array([19, 20]),
                          ('pr2', 'gripper'): array([2]),
                          ('pr2', 'pose'): array([0, 1]),
                          ('robot_end_pose', 'gripper'): array([18]),
                          ('robot_end_pose', 'value'): array([16, 17]),
                          ('robot_init_pose', 'gripper'): array([9]),
                          ('robot_init_pose', 'value'): array([7, 8])},
           'stochastic_conditions': True,
           'symbolic_bound': 5,
           'target_dim': 4,
           'target_inds': {('can0_end_target', 'value'): array([0, 1]),
                           ('middle_target', 'value'): array([2, 3])},
           'targets': [{'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]},
                       {'can0_end_target': [0.0,
                                            6.0],
                        'middle_target': [0.0,
                                          0.0]}],
           'task_breaks': [],
           'task_durations': {'grasp': 20,
                              'putdown': 20},
           'task_encoding': {'grasp': array([ 1.,  0.]),
                             'putdown': array([ 0.,  1.])},
           'task_list': ['grasp',
                         'putdown'],
           'type': <class 'policy_hooks.namo.namo_agent.NAMOSortingAgent'>,
           'viewer': None,
           'x0': [array([ 0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]),
                  array([ 0.,  0.,  0., -1.,  2.,  0.,  0.,  0.,  0.,  0., -1.,  2.,  0.,
        6.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])]},
 'algorithm': {'grasp': {'T': 20,
                         'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f7ec16b2810>,
                         'conditions': 2,
                         'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                         'fit_dynamics': False,
                         'init_traj_distr': {'T': 20,
                                             'dQ': 3,
                                             'dU': 3,
                                             'dX': 5,
                                             'dt': 1.0,
                                             'init_var': 0.001,
                                             'pos_gains': 0.01,
                                             'type': <function init_pd at 0x7f7ed15852a8>,
                                             'x0': [array([ 0.,  0.,  0.,  2.,  0.]),
                                                    array([ 0.,  0.,  0., -1.,  2.])]},
                         'iterations': 10,
                         'kl_step': 1.0,
                         'max_ent_traj': 0.0,
                         'max_step_mult': 3.0,
                         'min_step_mult': 0.5,
                         'opt_wt': 1000.0,
                         'policy_opt': {'batch_size': 3000,
                                        'distilled_network_model': <function tf_network at 0x7f7eeb1e3938>,
                                        'distilled_network_params': {'dim_hidden': [300,
                                                                                    300],
                                                                     'image_channels': 3,
                                                                     'image_height': 140,
                                                                     'image_width': 140,
                                                                     'n_layers': 2,
                                                                     'num_filters': [5,
                                                                                     10],
                                                                     'obs_image_data': [],
                                                                     'obs_include': [1,
                                                                                     9,
                                                                                     6],
                                                                     'sensor_dims': {0: 3,
                                                                                     1: 5,
                                                                                     6: 30,
                                                                                     8: 2,
                                                                                     9: 4}},
                                        'gpu_fraction': 0.2,
                                        'image_channels': 3,
                                        'image_height': 140,
                                        'image_width': 140,
                                        'iterations': 5000,
                                        'lr': 0.0001,
                                        'network_model': <function tf_network at 0x7f7eeb1e3938>,
                                        'network_params': {'dim_hidden': [100],
                                                           'image_channels': 3,
                                                           'image_height': 140,
                                                           'image_width': 140,
                                                           'n_layers': 1,
                                                           'num_filters': [5,
                                                                           10],
                                                           'obs_image_data': [],
                                                           'obs_include': [1,
                                                                           9,
                                                                           6],
                                                           'sensor_dims': {0: 3,
                                                                           1: 5,
                                                                           6: 30,
                                                                           8: 2,
                                                                           9: 4}},
                                        'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f7ec1083790>,
                                        'primitive_network_model': <function tf_classification_network at 0x7f7ed1597b90>,
                                        'task_list': ['grasp',
                                                      'putdown'],
                                        'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                        'weight_decay': 0.1,
                                        'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                         'policy_prior': {'max_clusters': 20,
                                          'max_samples': 20,
                                          'min_samples_per_cluster': 40,
                                          'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                         'policy_sample_mode': 'add',
                         'policy_transfer_coeff': 0.005,
                         'sample_on_policy': True,
                         'sample_ts_prob': 1.0,
                         'stochastic_conditions': True,
                         'traj_opt': {'covariance_damping': 0.01,
                                      'kl_threshold': 0.001,
                                      'min_temperature': 0.01,
                                      'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                         'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>},
               'putdown': {'T': 20,
                           'agent': <policy_hooks.namo.namo_agent.NAMOSortingAgent object at 0x7f7ec16b2810>,
                           'conditions': 2,
                           'cost': {'type': <class 'policy_hooks.traj_constr_cost.TrajConstrCost'>},
                           'fit_dynamics': False,
                           'init_traj_distr': {'T': 20,
                                               'dQ': 3,
                                               'dU': 3,
                                               'dX': 5,
                                               'dt': 1.0,
                                               'init_var': 0.001,
                                               'pos_gains': 0.01,
                                               'type': <function init_pd at 0x7f7ed15852a8>,
                                               'x0': [array([ 0.,  0.,  0.,  2.,  0.]),
                                                      array([ 0.,  0.,  0., -1.,  2.])]},
                           'iterations': 10,
                           'kl_step': 1.0,
                           'max_ent_traj': 0.0,
                           'max_step_mult': 3.0,
                           'min_step_mult': 0.5,
                           'opt_wt': 1000.0,
                           'policy_opt': {'batch_size': 3000,
                                          'distilled_network_model': <function tf_network at 0x7f7eeb1e3938>,
                                          'distilled_network_params': {'dim_hidden': [300,
                                                                                      300],
                                                                       'image_channels': 3,
                                                                       'image_height': 140,
                                                                       'image_width': 140,
                                                                       'n_layers': 2,
                                                                       'num_filters': [5,
                                                                                       10],
                                                                       'obs_image_data': [],
                                                                       'obs_include': [1,
                                                                                       9,
                                                                                       6],
                                                                       'sensor_dims': {0: 3,
                                                                                       1: 5,
                                                                                       6: 30,
                                                                                       8: 2,
                                                                                       9: 4}},
                                          'gpu_fraction': 0.2,
                                          'image_channels': 3,
                                          'image_height': 140,
                                          'image_width': 140,
                                          'iterations': 5000,
                                          'lr': 0.0001,
                                          'network_model': <function tf_network at 0x7f7eeb1e3938>,
                                          'network_params': {'dim_hidden': [100],
                                                             'image_channels': 3,
                                                             'image_height': 140,
                                                             'image_width': 140,
                                                             'n_layers': 1,
                                                             'num_filters': [5,
                                                                             10],
                                                             'obs_image_data': [],
                                                             'obs_include': [1,
                                                                             9,
                                                                             6],
                                                             'sensor_dims': {0: 3,
                                                                             1: 5,
                                                                             6: 30,
                                                                             8: 2,
                                                                             9: 4}},
                                          'prev': <policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf object at 0x7f7ec1083790>,
                                          'primitive_network_model': <function tf_classification_network at 0x7f7ed1597b90>,
                                          'task_list': ['grasp',
                                                        'putdown'],
                                          'type': <class 'policy_hooks.multi_head_policy_opt_tf.MultiHeadPolicyOptTf'>,
                                          'weight_decay': 0.1,
                                          'weights_file_prefix': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks//experimentspolicy'},
                           'policy_prior': {'max_clusters': 20,
                                            'max_samples': 20,
                                            'min_samples_per_cluster': 40,
                                            'type': <class 'policy_hooks.policy_prior_gmm.PolicyPriorGMM'>},
                           'policy_sample_mode': 'add',
                           'policy_transfer_coeff': 0.005,
                           'sample_on_policy': True,
                           'sample_ts_prob': 1.0,
                           'stochastic_conditions': True,
                           'traj_opt': {'covariance_damping': 0.01,
                                        'kl_threshold': 0.001,
                                        'min_temperature': 0.01,
                                        'type': <class 'policy_hooks.traj_opt_pi2.TrajOptPI2'>},
                           'type': <class 'policy_hooks.algorithm_pigps.AlgorithmPIGPS'>}},
 'batch_size': 3000,
 'common': {'conditions': 2,
            'data_files_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/data_files/',
            'experiment_dir': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/',
            'experiment_name': 'my_experiment_08-17-18_02-51',
            'log_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/log.txt',
            'target_filename': '/home/michaelmcdonald/dependencies/tampy/src/policy_hooks/experiments/target.npz'},
 'cost_f': <function cost_f at 0x7f7ed1570410>,
 'dQ': 3,
 'dim_hidden': [100],
 'goal_f': <function goal_f at 0x7f7ed1570488>,
 'gui_on': False,
 'hist_len': 10,
 'iterations': 10,
 'lr': 0.0001,
 'max_tree_depth': 3,
 'mode': 'position',
 'n_layers': 1,
 'num_conds': 2,
 'num_distilled_samples': 0,
 'num_rollouts': 8,
 'num_samples': 15,
 'opt_wt': 1000.0,
 'plan_f': <function <lambda> at 0x7f7ec109e668>,
 'policy_coeff': 1.0,
 'sample_on_policy': True,
 'stochastic_conditions': True,
 'take_optimal_sample': True,
 'target_f': <function get_next_target at 0x7f7ed1570320>,
 'task_durations': {'grasp': 20,
                    'putdown': 20},
 'task_list': ['grasp',
               'putdown'],
 'train_iterations': 5000,
 'verbose_policy_trials': 1,
 'verbose_trials': 1,
 'weight_decay': 0.1}


<class 'policy_hooks.traj_constr_cost.TrajConstrCost'>

STEP 0:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   2.00000000e+00
    0.00000000e+00]
 [  5.15305772e-02   4.20110673e-02  -1.89208668e-02   2.00000000e+00
    0.00000000e+00]
 [  6.29751310e-02   3.92521136e-02  -1.73198711e-02   2.00000000e+00
    0.00000000e+00]
 [  7.71076977e-02   3.58451605e-02  -1.53428372e-02   2.00000000e+00
    0.00000000e+00]
 [  9.00533572e-02   3.27243395e-02  -1.35318404e-02   2.00000000e+00
    0.00000000e+00]
 [  1.01970673e-01   2.98514217e-02  -1.18647050e-02   2.00000000e+00
    0.00000000e+00]
 [  1.12770051e-01   2.72479877e-02  -1.03540048e-02   2.00000000e+00
    0.00000000e+00]
 [  1.22616209e-01   2.48743482e-02  -8.97664577e-03   2.00000000e+00
    0.00000000e+00]
 [  1.31638557e-01   2.26993095e-02  -7.71452114e-03   2.00000000e+00
    0.00000000e+00]
 [  1.40035555e-01   2.06750277e-02  -6.53987471e-03   2.00000000e+00
    0.00000000e+00]
 [  1.47971511e-01   1.87618993e-02  -5.42972051e-03   2.00000000e+00
    0.00000000e+00]
 [  1.55493110e-01   1.69486515e-02  -4.37752344e-03   2.00000000e+00
    0.00000000e+00]
 [  1.63046718e-01   1.51276998e-02  -3.32082063e-03   2.00000000e+00
    0.00000000e+00]
 [  1.70420915e-01   1.33499950e-02  -2.28921324e-03   2.00000000e+00
    0.00000000e+00]
 [  1.77449450e-01   1.16556287e-02  -1.30596943e-03   2.00000000e+00
    0.00000000e+00]
 [  1.84112146e-01   1.00494474e-02  -3.73903662e-04   2.00000000e+00
    0.00000000e+00]
 [  1.90420002e-01   8.52881745e-03   5.08526340e-04   2.00000000e+00
    0.00000000e+00]
 [  1.96398765e-01   7.08750635e-03   1.34491920e-03   2.00000000e+00
    0.00000000e+00]
 [  2.02076599e-01   5.71874902e-03   2.13921070e-03   2.00000000e+00
    0.00000000e+00]
 [  2.07481712e-01   4.41573560e-03   2.89534964e-03   2.00000000e+00
    0.00000000e+00]]

STEP 1:
[[  2.07481712e-01   4.41573560e-03   2.89534964e-03   2.00000000e+00
    0.00000000e+00]
 [  2.16231555e-01   2.30639800e-03   4.11940180e-03   2.00000000e+00
    0.00000000e+00]
 [  2.21743762e-01   9.77572054e-04   4.89052199e-03   2.00000000e+00
    0.00000000e+00]
 [  2.26458251e-01  -1.58958137e-04   5.55005111e-03   2.00000000e+00
    0.00000000e+00]
 [  2.30809897e-01  -1.20801479e-03   6.15881756e-03   2.00000000e+00
    0.00000000e+00]
 [  2.34925121e-01  -2.20007449e-03   6.73451088e-03   2.00000000e+00
    0.00000000e+00]
 [  2.38836363e-01  -3.14295292e-03   7.28166290e-03   2.00000000e+00
    0.00000000e+00]
 [  2.42558375e-01  -4.04021889e-03   7.80234486e-03   2.00000000e+00
    0.00000000e+00]
 [  2.46102661e-01  -4.89464402e-03   8.29817355e-03   2.00000000e+00
    0.00000000e+00]
 [  2.49478981e-01  -5.70858270e-03   8.77050310e-03   2.00000000e+00
    0.00000000e+00]
 [  2.52695888e-01  -6.48408756e-03   9.22052562e-03   2.00000000e+00
    0.00000000e+00]
 [  2.55752623e-01  -7.22096860e-03   9.64814052e-03   2.00000000e+00
    0.00000000e+00]
 [  2.58719951e-01  -7.93631002e-03   1.00632571e-02   2.00000000e+00
    0.00000000e+00]
 [  2.61540741e-01  -8.61631334e-03   1.04578659e-02   2.00000000e+00
    0.00000000e+00]
 [  2.64222473e-01  -9.26281139e-03   1.08330213e-02   2.00000000e+00
    0.00000000e+00]
 [  2.66776383e-01  -9.87847894e-03   1.11903027e-02   2.00000000e+00
    0.00000000e+00]
 [  2.69210368e-01  -1.04652345e-02   1.15307942e-02   2.00000000e+00
    0.00000000e+00]
 [  2.71530777e-01  -1.10246092e-02   1.18554011e-02   2.00000000e+00
    0.00000000e+00]
 [  2.73743361e-01  -1.15580000e-02   1.21649355e-02   2.00000000e+00
    0.00000000e+00]
 [  2.75853425e-01  -1.20666809e-02   1.24601163e-02   2.00000000e+00
    0.00000000e+00]]

STEP 2:
[[ 0.27585343 -0.01206668  0.01246012  2.          0.        ]
 [ 0.27926546 -0.01288923  0.01293744  2.          0.        ]
 [ 0.28140867 -0.01340588  0.01323726  2.          0.        ]
 [ 0.28323746 -0.01384676  0.0134931   2.          0.        ]
 [ 0.28492489 -0.01425353  0.01372915  2.          0.        ]
 [ 0.28652155 -0.01463845  0.01395252  2.          0.        ]
 [ 0.28804025 -0.01500456  0.01416497  2.          0.        ]
 [ 0.28948641 -0.01535319  0.01436728  2.          0.        ]
 [ 0.29086402 -0.0156853   0.01456     2.          0.        ]
 [ 0.29217646 -0.01600168  0.0147436   2.          0.        ]
 [ 0.29342675 -0.0163031   0.01491851  2.          0.        ]
 [ 0.29461446 -0.01658942  0.01508467  2.          0.        ]
 [ 0.29576731 -0.01686733  0.01524593  2.          0.        ]
 [ 0.29686296 -0.01713146  0.01539922  2.          0.        ]
 [ 0.29790461 -0.01738257  0.01554494  2.          0.        ]
 [ 0.29889664 -0.01762174  0.01568372  2.          0.        ]
 [ 0.29984221 -0.01784967  0.015816    2.          0.        ]
 [ 0.30074373 -0.01806701  0.01594211  2.          0.        ]
 [ 0.30160338 -0.01827424  0.01606237  2.          0.        ]
 [ 0.30242321 -0.01847187  0.01617706  2.          0.        ]]

STEP 3:
[[ 0.30242321 -0.01847187  0.01617706  2.          0.        ]
 [ 0.30374882 -0.01879144  0.01636251  2.          0.        ]
 [ 0.30458149 -0.01899216  0.01647898  2.          0.        ]
 [ 0.30529195 -0.01916344  0.01657838  2.          0.        ]
 [ 0.30594754 -0.01932148  0.01667009  2.          0.        ]
 [ 0.30656782 -0.01947102  0.01675685  2.          0.        ]
 [ 0.30715784 -0.01961325  0.01683941  2.          0.        ]
 [ 0.30771965 -0.01974869  0.016918    2.          0.        ]
 [ 0.30825487 -0.01987771  0.01699287  2.          0.        ]
 [ 0.30876476 -0.02000064  0.0170642   2.          0.        ]
 [ 0.30925053 -0.02011774  0.01713216  2.          0.        ]
 [ 0.30971196 -0.02022898  0.0171967   2.          0.        ]
 [ 0.3101598  -0.02033694  0.01725936  2.          0.        ]
 [ 0.31058547 -0.02043956  0.01731891  2.          0.        ]
 [ 0.31099015 -0.02053711  0.01737553  2.          0.        ]
 [ 0.31137559 -0.02063003  0.01742944  2.          0.        ]
 [ 0.3117429  -0.02071859  0.01748083  2.          0.        ]
 [ 0.3120932  -0.02080302  0.01752983  2.          0.        ]
 [ 0.31242713 -0.02088353  0.01757655  2.          0.        ]
 [ 0.31274566 -0.0209603   0.0176211   2.          0.        ]]

STEP 4:
[[ 0.31274566 -0.0209603   0.0176211   2.          0.        ]
 [ 0.31326067 -0.02108446  0.01769314  2.          0.        ]
 [ 0.31358415 -0.02116245  0.0177384   2.          0.        ]
 [ 0.31386015 -0.02122898  0.01777701  2.          0.        ]
 [ 0.31411481 -0.02129039  0.01781264  2.          0.        ]
 [ 0.31435579 -0.02134848  0.01784635  2.          0.        ]
 [ 0.31458503 -0.02140373  0.01787842  2.          0.        ]
 [ 0.31480333 -0.02145636  0.01790895  2.          0.        ]
 [ 0.31501123 -0.02150648  0.01793805  2.          0.        ]
 [ 0.31520933 -0.02155424  0.01796576  2.          0.        ]
 [ 0.31539804 -0.02159973  0.01799215  2.          0.        ]
 [ 0.31557733 -0.02164293  0.01801723  2.          0.        ]
 [ 0.31575131 -0.02168488  0.01804158  2.          0.        ]
 [ 0.31591669 -0.02172476  0.0180647   2.          0.        ]
 [ 0.31607389 -0.02176267  0.01808671  2.          0.        ]
 [ 0.31622365 -0.02179876  0.01810766  2.          0.        ]
 [ 0.31636631 -0.02183316  0.01812762  2.          0.        ]
 [ 0.31650242 -0.02186596  0.01814665  2.          0.        ]
 [ 0.31663218 -0.02189725  0.0181648   2.          0.        ]
 [ 0.31675592 -0.02192706  0.01818212  2.          0.        ]]

